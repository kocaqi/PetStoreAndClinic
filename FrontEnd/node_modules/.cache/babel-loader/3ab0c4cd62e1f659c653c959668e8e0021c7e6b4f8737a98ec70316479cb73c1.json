{"ast":null,"code":"'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @param {Function} executor The executor function.\r\n *\r\n * @returns {CancelToken}\r\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n    let resolvePromise;\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n      let i = token._listeners.length;\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n      return promise;\n    };\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\r\n   * Throws a `CanceledError` if cancellation has been requested.\r\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\r\n   * Subscribe to the cancel signal\r\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\r\n   * Unsubscribe from the cancel signal\r\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\r\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n   * cancels the `CancelToken`.\r\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\nexport default CancelToken;","map":{"version":3,"names":["CanceledError","CancelToken","constructor","executor","TypeError","resolvePromise","promise","Promise","promiseExecutor","resolve","token","then","cancel","_listeners","i","length","onfulfilled","_resolve","subscribe","reject","unsubscribe","message","config","request","reason","throwIfRequested","listener","push","index","indexOf","splice","source","c"],"sources":["C:/Users/albic/OneDrive/Desktop/School Project/PetStoreAndClinic/node_modules/axios/lib/cancel/CancelToken.js"],"sourcesContent":["'use strict';\r\n\r\nimport CanceledError from './CanceledError.js';\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @param {Function} executor The executor function.\r\n *\r\n * @returns {CancelToken}\r\n */\r\nclass CancelToken {\r\n  constructor(executor) {\r\n    if (typeof executor !== 'function') {\r\n      throw new TypeError('executor must be a function.');\r\n    }\r\n\r\n    let resolvePromise;\r\n\r\n    this.promise = new Promise(function promiseExecutor(resolve) {\r\n      resolvePromise = resolve;\r\n    });\r\n\r\n    const token = this;\r\n\r\n    // eslint-disable-next-line func-names\r\n    this.promise.then(cancel => {\r\n      if (!token._listeners) return;\r\n\r\n      let i = token._listeners.length;\r\n\r\n      while (i-- > 0) {\r\n        token._listeners[i](cancel);\r\n      }\r\n      token._listeners = null;\r\n    });\r\n\r\n    // eslint-disable-next-line func-names\r\n    this.promise.then = onfulfilled => {\r\n      let _resolve;\r\n      // eslint-disable-next-line func-names\r\n      const promise = new Promise(resolve => {\r\n        token.subscribe(resolve);\r\n        _resolve = resolve;\r\n      }).then(onfulfilled);\r\n\r\n      promise.cancel = function reject() {\r\n        token.unsubscribe(_resolve);\r\n      };\r\n\r\n      return promise;\r\n    };\r\n\r\n    executor(function cancel(message, config, request) {\r\n      if (token.reason) {\r\n        // Cancellation has already been requested\r\n        return;\r\n      }\r\n\r\n      token.reason = new CanceledError(message, config, request);\r\n      resolvePromise(token.reason);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Throws a `CanceledError` if cancellation has been requested.\r\n   */\r\n  throwIfRequested() {\r\n    if (this.reason) {\r\n      throw this.reason;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribe to the cancel signal\r\n   */\r\n\r\n  subscribe(listener) {\r\n    if (this.reason) {\r\n      listener(this.reason);\r\n      return;\r\n    }\r\n\r\n    if (this._listeners) {\r\n      this._listeners.push(listener);\r\n    } else {\r\n      this._listeners = [listener];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from the cancel signal\r\n   */\r\n\r\n  unsubscribe(listener) {\r\n    if (!this._listeners) {\r\n      return;\r\n    }\r\n    const index = this._listeners.indexOf(listener);\r\n    if (index !== -1) {\r\n      this._listeners.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n   * cancels the `CancelToken`.\r\n   */\r\n  static source() {\r\n    let cancel;\r\n    const token = new CancelToken(function executor(c) {\r\n      cancel = c;\r\n    });\r\n    return {\r\n      token,\r\n      cancel\r\n    };\r\n  }\r\n}\r\n\r\nexport default CancelToken;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}