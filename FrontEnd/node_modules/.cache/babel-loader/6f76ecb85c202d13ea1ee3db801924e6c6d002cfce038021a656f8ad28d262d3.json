{"ast":null,"code":"import axios from 'axios';\n/*\n*\n* NEED TO REWORK\n* \n* Add request to back end.\n*/\n\nexport const authenticateUser = async session_id => {\n  if (session_id == \"session_id_template\") {\n    return axios.get(\"./templates/userLoginSuccess.json\") //template request\n    .then(data => {\n      return data;\n    }).catch(error => {\n      alert(error.message);\n    });\n  } else {\n    return axios.get(\"./templates/userLoginFail.json\") //template request\n    .then(data => {\n      return data;\n    }).catch(error => {\n      alert(error.message);\n    });\n  }\n};","map":{"version":3,"names":["axios","authenticateUser","session_id","get","then","data","catch","error","alert","message"],"sources":["/home/albi/Desktop/gitrep/PetStoreAndClinic/FrontEnd/src/util/authenticateUser.js"],"sourcesContent":["import axios from 'axios';\n/*\n*\n* NEED TO REWORK\n* \n* Add request to back end.\n*/\n\nexport const authenticateUser = async (session_id) => {\n\n    if(session_id==\"session_id_template\"){\n\n        return axios.get(\"./templates/userLoginSuccess.json\") //template request\n        .then(data => {\n            return data\n        })\n        .catch(error => {\n            alert(error.message)\n        });\n    }\n    else{\n        return axios.get(\"./templates/userLoginFail.json\") //template request\n        .then(data => {\n            return data\n        })\n        .catch(error => {\n            alert(error.message)\n        });\n    }\n\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,UAAU,IAAK;EAElD,IAAGA,UAAU,IAAE,qBAAqB,EAAC;IAEjC,OAAOF,KAAK,CAACG,GAAG,CAAC,mCAAmC,CAAC,CAAC;IAAA,CACrDC,IAAI,CAACC,IAAI,IAAI;MACV,OAAOA,IAAI;IACf,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,MACG;IACA,OAAOT,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAAA,CAClDC,IAAI,CAACC,IAAI,IAAI;MACV,OAAOA,IAAI;IACf,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACxB,CAAC,CAAC;EACN;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}