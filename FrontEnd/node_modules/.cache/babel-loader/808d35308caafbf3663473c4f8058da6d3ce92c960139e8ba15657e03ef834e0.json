{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport { authenticateUser } from \"./authenticateUser\";\nimport { useNavigate } from \"react-router-dom\";\nexport function SecureRoute(props) {\n  _s();\n  const navigate = useNavigate();\n  const effectRan = useRef(false);\n\n  //State and cookies\n\n  const [grantAccess, setgrantAccess] = useState(false);\n  const [cookies, setCookie] = useCookies();\n  const checkUser = async () => {\n    const userInfo = await authenticateUser(cookies.session_id);\n\n    //Update User info\n\n    setCookie(\"user\", userInfo, {\n      path: \"/\"\n    });\n\n    /******************************* */\n\n    if (userInfo.LoggedIn && !props.roles.includes(userInfo.userData.role)) {\n      //User is logged in but it's role doesn't match the specified ones\n      navigate(\"/not-authorized\");\n    } else if (userInfo.LoggedIn === props.LoggedIn) {\n      //User login status matches the one specifed\n      setgrantAccess(true);\n    } else {\n      //window.location.href=props.Redirect     //Redirect the user to the specifed url\n    }\n  };\n\n  /* \n  * Plays at component load\n  * \n  * Check user login status and role\n  */\n\n  useEffect(() => {\n    if (!effectRan.current) {\n      checkUser();\n      effectRan.current = true;\n    }\n  }, []);\n  return grantAccess ? props.Route : null;\n}\n_s(SecureRoute, \"5UBwe5avHxoNgo4d1qkyPW20lWI=\", false, function () {\n  return [useNavigate, useCookies];\n});\n_c = SecureRoute;\nvar _c;\n$RefreshReg$(_c, \"SecureRoute\");","map":{"version":3,"names":["useEffect","useState","useRef","useCookies","authenticateUser","useNavigate","SecureRoute","props","_s","navigate","effectRan","grantAccess","setgrantAccess","cookies","setCookie","checkUser","userInfo","session_id","path","LoggedIn","roles","includes","userData","role","current","Route","_c","$RefreshReg$"],"sources":["/home/albi/Desktop/gitrep/PetStoreAndClinic/FrontEnd/src/util/secureRoute.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\"\nimport { useCookies } from 'react-cookie';\nimport { authenticateUser } from \"./authenticateUser\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport function SecureRoute(props){\n\n    const navigate = useNavigate()\n    \n\n    const effectRan = useRef(false)\n\n    //State and cookies\n\n    const [ grantAccess, setgrantAccess] = useState(false)\n    const [cookies, setCookie] = useCookies();\n\n    \n    const checkUser = async () => {\n\n        const userInfo = await authenticateUser(cookies.session_id)\n\n        //Update User info\n\n        setCookie(\"user\", userInfo, {\n            path: \"/\"\n        });\n\n        /******************************* */\n\n        if(userInfo.LoggedIn && !props.roles.includes(userInfo.userData.role)){ //User is logged in but it's role doesn't match the specified ones\n            navigate(\"/not-authorized\")\n        }\n\n        else if(userInfo.LoggedIn === props.LoggedIn){ //User login status matches the one specifed\n            setgrantAccess(true)\n        }\n\n        else{       \n            //window.location.href=props.Redirect     //Redirect the user to the specifed url\n        }\n\n\n    }\n    \n    /* \n    * Plays at component load\n    * \n    * Check user login status and role\n    */\n\n    useEffect(() => {\n\n        if(!effectRan.current){\n\n            checkUser()\n        \n            effectRan.current = true\n        }\n    }, [])\n    \n    \n    return grantAccess ? props.Route : null\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAE9B,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAG9B,MAAMK,SAAS,GAAGR,MAAM,CAAC,KAAK,CAAC;;EAE/B;;EAEA,MAAM,CAAES,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACY,OAAO,EAAEC,SAAS,CAAC,GAAGX,UAAU,EAAE;EAGzC,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAE1B,MAAMC,QAAQ,GAAG,MAAMZ,gBAAgB,CAACS,OAAO,CAACI,UAAU,CAAC;;IAE3D;;IAEAH,SAAS,CAAC,MAAM,EAAEE,QAAQ,EAAE;MACxBE,IAAI,EAAE;IACV,CAAC,CAAC;;IAEF;;IAEA,IAAGF,QAAQ,CAACG,QAAQ,IAAI,CAACZ,KAAK,CAACa,KAAK,CAACC,QAAQ,CAACL,QAAQ,CAACM,QAAQ,CAACC,IAAI,CAAC,EAAC;MAAE;MACpEd,QAAQ,CAAC,iBAAiB,CAAC;IAC/B,CAAC,MAEI,IAAGO,QAAQ,CAACG,QAAQ,KAAKZ,KAAK,CAACY,QAAQ,EAAC;MAAE;MAC3CP,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,MAEG;MACA;IAAA;EAIR,CAAC;;EAED;AACJ;AACA;AACA;AACA;;EAEIZ,SAAS,CAAC,MAAM;IAEZ,IAAG,CAACU,SAAS,CAACc,OAAO,EAAC;MAElBT,SAAS,EAAE;MAEXL,SAAS,CAACc,OAAO,GAAG,IAAI;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,OAAOb,WAAW,GAAGJ,KAAK,CAACkB,KAAK,GAAG,IAAI;AAC3C;AAACjB,EAAA,CA1DeF,WAAW;EAAA,QAEND,WAAW,EAQCF,UAAU;AAAA;AAAAuB,EAAA,GAV3BpB,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}