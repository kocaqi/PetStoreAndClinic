{"ast":null,"code":"/* eslint-env browser */\n\n/* global module */\nexport function addDebugMetadata(instance, stackIndex) {\n  // @ts-expect-error todo: stacktrace does not exist on error (non standard browser?)\n  const {\n    stack,\n    stacktrace,\n    message\n  } = new Error(\"stacktrace source\");\n  instance.debug = {\n    stackInfo: {\n      stack,\n      stacktrace,\n      message\n    },\n    stackIndex: stackIndex\n  };\n} // DEVTOOLS SETUP\n\nexport const setupDevtoolsExtension = () => {\n  const atomicMap = {};\n  const extensionsMap = new Map();\n  const stylesMap = new Map();\n  const getStyles = className => {\n    const styles = {};\n    if (typeof className !== \"string\") {\n      return styles;\n    }\n    if (stylesMap.has(className)) {\n      styles.styles = stylesMap.get(className);\n      const classList = className.split(\" \");\n      if (classList.length) {\n        const classes = {};\n        classList.forEach(singleClassName => {\n          classes[singleClassName] = atomicMap[singleClassName];\n        });\n        styles.classes = classes;\n      }\n      if (extensionsMap.has(className)) {\n        const extension = extensionsMap.get(className);\n        styles.extends = extension;\n      }\n      return styles;\n    }\n  };\n  window.__STYLETRON_DEVTOOLS__ = {\n    atomicMap,\n    extensionsMap,\n    stylesMap,\n    getStyles\n  };\n}; // todo: export debug engine interface\n\nexport class BrowserDebugEngine {\n  constructor(worker) {\n    if (!worker) {\n      const workerBlob = new Blob([`importScripts(\"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/worker.js\")`], {\n        type: \"application/javascript\"\n      });\n      worker = new Worker(URL.createObjectURL(workerBlob));\n      worker.postMessage({\n        id: \"init_wasm\",\n        url: \"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/mappings.wasm\"\n      });\n      worker.postMessage({\n        id: \"set_render_interval\",\n        interval: 120\n      });\n      if (module.hot) {\n        module.hot.addStatusHandler(status => {\n          if (status === \"dispose\") {\n            worker.postMessage({\n              id: \"invalidate\"\n            });\n          }\n        });\n      }\n    }\n    this.worker = worker;\n    this.counter = 0;\n    this.worker.onmessage = msg => {\n      const {\n        id,\n        css\n      } = msg.data;\n      if (id === \"render_css\" && css) {\n        const style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(css));\n        document.head.appendChild(style);\n      }\n    };\n  }\n  debug(_ref) {\n    let {\n      stackIndex,\n      stackInfo\n    } = _ref;\n    const className = `__debug-${this.counter++}`;\n    this.worker.postMessage({\n      id: \"add_mapped_class\",\n      className,\n      stackInfo,\n      stackIndex\n    });\n    return className;\n  }\n} // todo: export debug engine interface\n\nexport class NoopDebugEngine {\n  debug() {\n    return;\n  }\n}\nexport const DebugEngine = true ? BrowserDebugEngine : NoopDebugEngine;","map":{"version":3,"names":["addDebugMetadata","instance","stackIndex","stack","stacktrace","message","Error","debug","stackInfo","setupDevtoolsExtension","atomicMap","extensionsMap","Map","stylesMap","getStyles","className","styles","has","get","classList","split","length","classes","forEach","singleClassName","extension","extends","window","__STYLETRON_DEVTOOLS__","BrowserDebugEngine","constructor","worker","workerBlob","Blob","type","Worker","URL","createObjectURL","postMessage","id","url","interval","module","hot","addStatusHandler","status","counter","onmessage","msg","css","data","style","document","createElement","appendChild","createTextNode","head","_ref","NoopDebugEngine","DebugEngine"],"sources":["/home/albi/Documents/ReactProject/pet-shop/node_modules/styletron-react/dist-browser-esm/src/dev-tool.ts"],"sourcesContent":["/* eslint-env browser */\n/* global module */\n\nexport function addDebugMetadata(instance, stackIndex) {\n  // @ts-expect-error todo: stacktrace does not exist on error (non standard browser?)\n  const {stack, stacktrace, message} = new Error(\"stacktrace source\");\n  instance.debug = {\n    stackInfo: {stack, stacktrace, message},\n    stackIndex: stackIndex,\n  };\n}\n\n// DEVTOOLS SETUP\ntype StyletronStyles = {\n  classes?: any;\n  styles?: any;\n  extends?: any;\n};\n\nexport const setupDevtoolsExtension = () => {\n  const atomicMap = {};\n  const extensionsMap = new Map();\n  const stylesMap = new Map();\n  const getStyles: (className: string) => StyletronStyles = className => {\n    const styles: StyletronStyles = {};\n    if (typeof className !== \"string\") {\n      return styles;\n    }\n    if (stylesMap.has(className)) {\n      styles.styles = stylesMap.get(className);\n      const classList = className.split(\" \");\n      if (classList.length) {\n        const classes = {};\n        classList.forEach(singleClassName => {\n          classes[singleClassName] = atomicMap[singleClassName];\n        });\n        styles.classes = classes;\n      }\n      if (extensionsMap.has(className)) {\n        const extension = extensionsMap.get(className);\n        styles.extends = extension;\n      }\n      return styles;\n    }\n  };\n  window.__STYLETRON_DEVTOOLS__ = {\n    atomicMap,\n    extensionsMap,\n    stylesMap,\n    getStyles,\n  };\n};\n\n// todo: export debug engine interface\nexport class BrowserDebugEngine {\n  private worker: any;\n  private counter: number;\n  constructor(worker?) {\n    if (!worker) {\n      const workerBlob = new Blob(\n        [\n          `importScripts(\"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/worker.js\")`,\n        ],\n        {type: \"application/javascript\"},\n      );\n      worker = new Worker(URL.createObjectURL(workerBlob));\n      worker.postMessage({\n        id: \"init_wasm\",\n        url: \"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/mappings.wasm\",\n      });\n      worker.postMessage({\n        id: \"set_render_interval\",\n        interval: 120,\n      });\n      if (module.hot) {\n        module.hot.addStatusHandler(status => {\n          if (status === \"dispose\") {\n            worker.postMessage({id: \"invalidate\"});\n          }\n        });\n      }\n    }\n    this.worker = worker;\n    this.counter = 0;\n    this.worker.onmessage = msg => {\n      const {id, css} = msg.data;\n      if (id === \"render_css\" && css) {\n        const style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(css));\n        document.head.appendChild(style);\n      }\n    };\n  }\n\n  debug({stackIndex, stackInfo}) {\n    const className = `__debug-${this.counter++}`;\n    this.worker.postMessage({\n      id: \"add_mapped_class\",\n      className,\n      stackInfo,\n      stackIndex,\n    });\n    return className;\n  }\n}\n\n// todo: export debug engine interface\nexport class NoopDebugEngine {\n  debug(): undefined {\n    return;\n  }\n}\n\ndeclare var __BROWSER__: boolean;\nexport const DebugEngine = __BROWSER__ ? BrowserDebugEngine : NoopDebugEngine;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}