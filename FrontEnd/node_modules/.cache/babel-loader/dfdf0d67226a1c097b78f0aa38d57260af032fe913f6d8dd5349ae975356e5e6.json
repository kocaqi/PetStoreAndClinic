{"ast":null,"code":"export function driver(style, styletron) {\n  const tx = renderDeclarativeRules(style, styletron);\n  return styletron.renderStyle(tx);\n}\nexport function getInitialStyle() {\n  return {};\n}\nexport function renderDeclarativeRules(style, styletron) {\n  for (const key in style) {\n    const val = style[key];\n    if (key === \"animationName\" && typeof val !== \"string\") {\n      style.animationName = styletron.renderKeyframes(val);\n      continue;\n    }\n    if (key === \"fontFamily\" && typeof val !== \"string\") {\n      if (Array.isArray(val)) {\n        let result = \"\";\n        for (const font of val) {\n          if (typeof font === \"object\") {\n            result += `${styletron.renderFontFace(font)},`;\n          } else if (typeof font === \"string\") {\n            result += `${font},`;\n          }\n        }\n        style.fontFamily = result.slice(0, -1);\n        continue;\n      } else if (val === void 0) {\n        continue;\n      } else {\n        style.fontFamily = styletron.renderFontFace(val);\n        continue;\n      }\n    }\n    if (typeof val === \"object\" && val !== null) {\n      renderDeclarativeRules(val, styletron);\n    }\n  }\n  return style;\n}","map":{"version":3,"names":["driver","style","styletron","tx","renderDeclarativeRules","renderStyle","getInitialStyle","key","val","animationName","renderKeyframes","Array","isArray","result","font","renderFontFace","fontFamily","slice"],"sources":["/home/albi/Documents/ReactProject/pet-shop/node_modules/styletron-standard/dist-browser-esm/src/index.ts"],"sourcesContent":["import type {\n  Properties,\n  FontFace as FontFaceObject,\n  KeyframesObject,\n} from \"./style-types\";\n\nexport type {FontFaceObject, KeyframesObject};\n\nexport type StyleObject = Properties & {\n  [key in string]: Properties[keyof Properties] | StyleObject;\n};\n\nexport interface StandardEngine {\n  renderStyle(style: StyleObject): string;\n  renderKeyframes(keyframes: KeyframesObject): string;\n  renderFontFace(fontFace: FontFaceObject): string;\n}\n\nexport function driver(style: StyleObject, styletron: StandardEngine): string {\n  const tx = renderDeclarativeRules(style, styletron);\n  return styletron.renderStyle(tx);\n}\n\nexport function getInitialStyle(): StyleObject {\n  return {};\n}\n\nexport function renderDeclarativeRules(\n  style: StyleObject,\n  styletron: StandardEngine,\n) {\n  for (const key in style) {\n    const val = style[key];\n    if (key === \"animationName\" && typeof val !== \"string\") {\n      style.animationName = styletron.renderKeyframes(val as any);\n      continue;\n    }\n    if (key === \"fontFamily\" && typeof val !== \"string\") {\n      if (Array.isArray(val)) {\n        let result = \"\";\n        for (const font of val) {\n          if (typeof font === \"object\") {\n            result += `${styletron.renderFontFace(font as any)},`;\n          } else if (typeof font === \"string\") {\n            result += `${font},`;\n          }\n        }\n        style.fontFamily = result.slice(0, -1);\n        continue;\n      } else if (val === void 0) {\n        continue;\n      } else {\n        style.fontFamily = styletron.renderFontFace(val as any);\n        continue;\n      }\n    }\n    if (typeof val === \"object\" && val !== null) {\n      renderDeclarativeRules(val as StyleObject, styletron);\n    }\n  }\n  return style;\n}\n"],"mappings":"AAkBA,OAAO,SAASA,MAATA,CAAgBC,KAAhB,EAAoCC,SAApC,EAAuE;EAC5E,MAAMC,EAAE,GAAGC,sBAAsB,CAACH,KAAD,EAAQC,SAAR,CAAjC;EACA,OAAOA,SAAS,CAACG,WAAV,CAAsBF,EAAtB,CAAP;AACD;AAED,OAAO,SAASG,eAATA,CAAA,EAAwC;EAC7C,OAAO,EAAP;AACD;AAED,OAAO,SAASF,sBAATA,CACLH,KADK,EAELC,SAFK,EAGL;EACA,KAAK,MAAMK,GAAX,IAAkBN,KAAlB,EAAyB;IACvB,MAAMO,GAAG,GAAGP,KAAK,CAACM,GAAD,CAAjB;IACA,IAAIA,GAAG,KAAK,eAAR,IAA2B,OAAOC,GAAP,KAAe,QAA9C,EAAwD;MACtDP,KAAK,CAACQ,aAAN,GAAsBP,SAAS,CAACQ,eAAV,CAA0BF,GAA1B,CAAtB;MACA;IACD;IACD,IAAID,GAAG,KAAK,YAAR,IAAwB,OAAOC,GAAP,KAAe,QAA3C,EAAqD;MACnD,IAAIG,KAAK,CAACC,OAAN,CAAcJ,GAAd,CAAJ,EAAwB;QACtB,IAAIK,MAAM,GAAG,EAAb;QACA,KAAK,MAAMC,IAAX,IAAmBN,GAAnB,EAAwB;UACtB,IAAI,OAAOM,IAAP,KAAgB,QAApB,EAA8B;YAC5BD,MAAM,IAAK,GAAEX,SAAS,CAACa,cAAV,CAAyBD,IAAzB,CAAsC,GAAnD;UACD,CAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;YACnCD,MAAM,IAAK,GAAEC,IAAK,GAAlB;UACD;QACF;QACDb,KAAK,CAACe,UAAN,GAAmBH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAnB;QACA;MACD,CAXD,MAWO,IAAIT,GAAG,KAAK,KAAK,CAAjB,EAAoB;QACzB;MACD,CAFM,MAEA;QACLP,KAAK,CAACe,UAAN,GAAmBd,SAAS,CAACa,cAAV,CAAyBP,GAAzB,CAAnB;QACA;MACD;IACF;IACD,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;MAC3CJ,sBAAsB,CAACI,GAAD,EAAqBN,SAArB,CAAtB;IACD;EACF;EACD,OAAOD,KAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}