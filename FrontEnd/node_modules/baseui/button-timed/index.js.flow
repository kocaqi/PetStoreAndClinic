/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// @flow
import * as React from 'react';
import type { OverrideT } from '../helpers/overrides.js';
import { type StyletronComponent } from 'styletron-react';
import type { CustomColorsT } from '../button';

export type OverridesT = {
  BaseButtonTimed?: OverrideT,
  TimerContainer?: OverrideT,
  Root?: OverrideT,
  StartEnhancer?: OverrideT,
  EndEnhancer?: OverrideT,
  LoadingSpinnerContainer?: OverrideT,
  LoadingSpinner?: OverrideT,
};

export type ButtonTimedPropsT = {
  initialTime: number,
  onClick: (a?: SyntheticEvent<HTMLButtonElement>) => mixed,
  overrides?: OverridesT,
  paused?: boolean,
  children?: React$Node,
  colors?: CustomColorsT,
  disabled?: boolean,
  /** A helper rendered at the end of the button. */
  // flowlint-next-line unclear-type:off
  endEnhancer?: React.Node | React.AbstractComponent<any>,
  /** Show loading button style and spinner. */
  isLoading?: boolean,
  /** Indicates that the button is selected */
  isSelected?: boolean,
  /** A helper rendered at the start of the button. */
  // flowlint-next-line unclear-type:off
  startEnhancer?: React.Node | React.AbstractComponent<any>,
  type?: 'submit' | 'reset' | 'button',
};

export {
  StyledStartEnhancer,
  StyledEndEnhancer,
  StyledLoadingSpinner,
  StyledLoadingSpinnerContainer,
} from '../button';
declare export var StyledBaseButtonTimed: StyletronComponent<'div', {}>;
declare export var StyledTimerContainer: StyletronComponent<'div', {}>;

declare export var ButtonTimed: React.ComponentType<ButtonTimedPropsT>;

declare var __DEV__: boolean;
declare var __NODE__: boolean;
declare var __BROWSER__: boolean;
