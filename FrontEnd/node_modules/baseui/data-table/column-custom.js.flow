/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// @flow

import Column from './column.js';
import { COLUMNS } from './constants.js';
import type { ColumnT, RenderCellT, RenderFilterT, SharedColumnOptionsT } from './types.js';

// I could not re-use the ColumnT type to build this.. tried to spread the ColumnT
// and define renderFilter, etc. to optional, but required status was maintained.
type OptionsT<ValueT, FilterParamsT> = {|
  ...SharedColumnOptionsT<ValueT>,
  renderCell: RenderCellT<ValueT>,
  renderFilter?: RenderFilterT<ValueT, FilterParamsT>,
  buildFilter?: (FilterParamsT) => (ValueT) => boolean,
  textQueryFilter?: (string, ValueT) => boolean,
  sortFn?: (ValueT, ValueT) => number,
|};

function CustomColumn<ValueT, FilterParamsT>(
  options: OptionsT<ValueT, FilterParamsT>
): ColumnT<ValueT, FilterParamsT> {
  //$FlowFixMe
  return Column({ kind: COLUMNS.CUSTOM, ...options });
}

export default CustomColumn;

declare var __DEV__: boolean;
declare var __NODE__: boolean;
declare var __BROWSER__: boolean;
