function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
import { styled } from '../styles';
import { getInputStyles, getInputContainerStyles, getRootStyles } from '../input/styled-components';
export var StyledTextAreaRoot = styled('div', function (props) {
  return _objectSpread(_objectSpread({}, getRootStyles(_objectSpread(_objectSpread({
    $positive: false
  }, props), {}, {
    $hasIconTrailing: false
  }))), {}, {
    width: props.$resize ? 'fit-content' : '100%'
  });
});
StyledTextAreaRoot.displayName = "StyledTextAreaRoot";
StyledTextAreaRoot.displayName = 'StyledTextAreaRoot';
export var StyledTextareaContainer = styled('div', function (props) {
  return getInputContainerStyles(_objectSpread({
    $positive: false
  }, props));
});
StyledTextareaContainer.displayName = "StyledTextareaContainer";
StyledTextareaContainer.displayName = 'StyledTextareaContainer';
export var StyledTextarea = styled('textarea', function (props) {
  return _objectSpread(_objectSpread({}, getInputStyles(props)), {}, {
    resize: props.$resize || 'none'
  });
});
StyledTextarea.displayName = "StyledTextarea";
StyledTextarea.displayName = 'StyledTextarea';