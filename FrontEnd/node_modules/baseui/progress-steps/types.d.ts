import type { ReactNode } from 'react';
import type { Override } from '../helpers/overrides';
export declare type ProgressStepsOverrides = {
    Root?: Override;
    StepRoot?: Override;
    IconContainer?: Override;
    Icon?: Override;
    InnerIcon?: Override;
    Tail?: Override;
    Content?: Override;
    Title?: Override;
    Description?: Override;
};
export declare type ProgressStepsProps = {
    overrides?: ProgressStepsOverrides;
    children?: ReactNode;
    /** Defines the current active step index. */
    current?: number;
};
export declare type StepOverrides = {
    Root?: Override;
    IconContainer?: Override;
    Icon?: Override;
    InnerIcon?: Override;
    Tail?: Override;
    Content?: Override;
    Title?: Override;
    Description?: Override;
};
export declare type StepProps = {
    /** The title of the Step. */
    title?: ReactNode;
    /** Defines if the step is completed. Overriden by ProgressSteps, if used. */
    isCompleted?: boolean;
    /** Defines if the step is currently active. */
    isActive?: boolean;
    /** Defines if the step is the last item displayed. Overriden by ProgressSteps, if used. */
    isLast?: boolean;
    overrides?: StepOverrides;
    children?: ReactNode;
};
export declare type NumberedStepOverrides = {
    Root?: Override;
    IconContainer?: Override;
    Icon?: Override;
    InnerIcon?: Override;
    Tail?: Override;
    Content?: Override;
    Title?: Override;
    Description?: Override;
};
export declare type NumberedStepProps = {
    /** The title of the Step. */
    title?: string;
    /** Defines if the step is completed. */
    isCompleted?: boolean;
    /** Defines if the step is currently active. */
    isActive?: boolean;
    /** Defines if the step is the last item displayed. */
    isLast?: boolean;
    overrides?: NumberedStepOverrides;
    children?: ReactNode;
    /** The number displayed as the step number */
    step?: ReactNode;
};
export declare type StyleProps = {
    $isActive?: boolean;
    $isCompleted?: boolean;
    $disabled?: boolean;
};
