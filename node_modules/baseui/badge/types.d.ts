import type * as React from 'react';
import type { HIERARCHY, SHAPE, COLOR, PLACEMENT, ROLE } from './constants';
import type { Override } from '../helpers/overrides';
export declare type Hierarchy = typeof HIERARCHY[keyof typeof HIERARCHY];
export declare type Shape = typeof SHAPE[keyof typeof SHAPE];
export declare type Color = typeof COLOR[keyof typeof COLOR];
export declare type Placement = typeof PLACEMENT[keyof typeof PLACEMENT];
export declare type Role = typeof ROLE[keyof typeof ROLE];
export declare type BadgeOverrides = {
    Root?: Override;
    Positioner?: Override;
    Badge?: Override;
};
export declare type BadgeProps = {
    content: React.ReactNode;
    hierarchy?: Hierarchy;
    shape?: Shape;
    color?: Color;
    placement?: Placement;
    hidden?: boolean;
    horizontalOffset?: string;
    verticalOffset?: string;
    overrides?: BadgeOverrides;
    children?: React.ReactNode;
};
export declare type NotificationCircleProps = {
    content: React.ReactNode;
    color?: Color;
    placement?: Placement;
    hidden?: boolean;
    horizontalOffset?: string;
    verticalOffset?: string;
    overrides?: BadgeOverrides;
    children?: React.ReactNode;
};
export declare type HintDotProps = {
    color?: Color;
    hidden?: boolean;
    horizontalOffset?: string;
    verticalOffset?: string;
    overrides?: BadgeOverrides;
    children?: React.ReactNode;
};
