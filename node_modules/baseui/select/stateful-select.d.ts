import * as React from 'react';
import type { StatefulSelectProps } from './types';
declare function StatefulSelect(props: StatefulSelectProps): JSX.Element;
declare namespace StatefulSelect {
    var defaultProps: {
        'aria-label': any;
        'aria-describedby': any;
        'aria-errormessage': any;
        'aria-labelledby': any;
        autoFocus: boolean;
        backspaceRemoves: boolean;
        clearable: boolean;
        closeOnSelect: boolean;
        creatable: boolean;
        deleteRemoves: boolean;
        disabled: boolean;
        error: boolean;
        positive: boolean;
        escapeClearsValue: boolean;
        filterOptions: (options: import("./types").Value, filterValue: string, excludeOptions?: import("./types").Value, newProps?: Partial<{
            filterOption: (option: Readonly<{
                [x: string]: any;
                id?: string | number;
                label?: React.ReactNode;
                disabled?: boolean;
                clearableValue?: boolean;
                isCreatable?: boolean;
                __optgroup?: string;
            }>, filterValue: string) => boolean;
            ignoreCase: boolean;
            labelKey: string;
            matchPos: "start" | "any";
            matchProp: "label" | "value" | "any";
            trimFilter: boolean;
            valueKey: string;
        }>) => Readonly<{
            [x: string]: any;
            id?: string | number;
            label?: React.ReactNode;
            disabled?: boolean;
            clearableValue?: boolean;
            isCreatable?: boolean;
            __optgroup?: string;
        }>[];
        filterOutSelected: boolean;
        getOptionLabel: any;
        getValueLabel: any;
        ignoreCase: boolean;
        isLoading: boolean;
        labelKey: string;
        maxDropdownHeight: string;
        multi: boolean;
        onBlur: () => void;
        onBlurResetsInput: boolean;
        onChange: () => void;
        onFocus: () => void;
        onInputChange: () => void;
        onCloseResetsInput: boolean;
        onSelectResetsInput: boolean;
        onOpen: any;
        onClose: any;
        openOnClick: boolean;
        startOpen: boolean;
        options: any[];
        overrides: {};
        required: boolean;
        searchable: boolean;
        size: "default";
        type: "select";
        value: any[];
        valueKey: string;
    };
}
export default StatefulSelect;
