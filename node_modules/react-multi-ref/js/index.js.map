{"version":3,"file":"index.js","names":["MultiRef","Map","key","refFn","_refFns","get","value","map","set"],"sources":["../src/index.js"],"sourcesContent":["/* @flow */\n\ntype RefFn<V> = (value: V|null) => mixed;\n\nexport default class MultiRef<K,V> {\n  map: Map<K,V> = new Map();\n\n  _refFns: Map<K,RefFn<V>> = new Map();\n\n  ref(key: K): RefFn<V> {\n    const refFn = this._refFns.get(key);\n    if (refFn) {\n      return refFn;\n    } else {\n      const refFn: RefFn<V> = value => {\n        if (value == null) {\n          this._refFns.delete(key);\n          this.map.delete(key);\n        } else {\n          this._refFns.set(key, refFn);\n          this.map.set(key, value);\n        }\n      };\n      // We don't put `refFn` into `this._refFns` yet, because if the current render\n      // is aborted, then it's possible than `refFn(null)` won't be called later\n      // and its cleanup will never happen. We shouldn't cause any side effects that\n      // need cleaning up later until `refFn` gets called with a non-null value.\n      return refFn;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;IAIqBA,Q;;;kDACH,IAAIC,GAAJ,E;sDAEW,IAAIA,GAAJ,E;;;;;WAE3B,aAAIC,GAAJ,EAAsB;MAAA;;MACpB,IAAMC,KAAK,GAAG,KAAKC,OAAL,CAAaC,GAAb,CAAiBH,GAAjB,CAAd;;MACA,IAAIC,KAAJ,EAAW;QACT,OAAOA,KAAP;MACD,CAFD,MAEO;QACL,IAAMA,MAAe,GAAG,SAAlBA,MAAkB,CAAAG,KAAK,EAAI;UAC/B,IAAIA,KAAK,IAAI,IAAb,EAAmB;YACjB,KAAI,CAACF,OAAL,WAAoBF,GAApB;;YACA,KAAI,CAACK,GAAL,WAAgBL,GAAhB;UACD,CAHD,MAGO;YACL,KAAI,CAACE,OAAL,CAAaI,GAAb,CAAiBN,GAAjB,EAAsBC,MAAtB;;YACA,KAAI,CAACI,GAAL,CAASC,GAAT,CAAaN,GAAb,EAAkBI,KAAlB;UACD;QACF,CARD,CADK,CAUL;QACA;QACA;QACA;;;QACA,OAAOH,MAAP;MACD;IACF"}