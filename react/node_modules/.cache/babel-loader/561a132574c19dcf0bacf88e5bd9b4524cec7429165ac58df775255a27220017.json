{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport { authenticateUser } from \"./authenticateUser\";\nexport function SecureRoute(props) {\n  _s();\n  const navigate = useNavigate();\n  const effectRan = useRef(false);\n  const [grantAccess, setgrantAccess] = useState(false);\n  const [cookies, setCookie] = useCookies();\n  const checkUser = async () => {\n    const userInfo = await authenticateUser(cookies.session_id);\n    if (!props.roles.includes(userInfo.role)) {\n      navigate(\"/not-authorized\");\n    }\n    if (userInfo.LoggedIn === props.LoggedIn) {\n      setgrantAccess(true);\n    } else {\n      navigate(\"/login\");\n    }\n  };\n  useEffect(() => {\n    if (!effectRan.current) {\n      checkUser();\n      effectRan.current = true;\n    }\n  }, []);\n  return grantAccess ? props.Route : null;\n}\n_s(SecureRoute, \"5UBwe5avHxoNgo4d1qkyPW20lWI=\", false, function () {\n  return [useNavigate, useCookies];\n});\n_c = SecureRoute;\nvar _c;\n$RefreshReg$(_c, \"SecureRoute\");","map":{"version":3,"names":["useNavigate","useEffect","useState","useRef","useCookies","authenticateUser","SecureRoute","props","_s","navigate","effectRan","grantAccess","setgrantAccess","cookies","setCookie","checkUser","userInfo","session_id","roles","includes","role","LoggedIn","current","Route","_c","$RefreshReg$"],"sources":["/home/albi/Documents/ReactProject/pet-shop/src/util/secureRoute.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\"\nimport { useCookies } from 'react-cookie';\nimport { authenticateUser } from \"./authenticateUser\";\n\nexport function SecureRoute(props){\n\n    const navigate = useNavigate()\n\n    const effectRan = useRef(false)\n\n    const [ grantAccess, setgrantAccess] = useState(false)\n    const [cookies, setCookie] = useCookies();\n\n    const checkUser = async () => {\n\n        const userInfo = await authenticateUser(cookies.session_id)\n\n        if(!props.roles.includes(userInfo.role)){\n            navigate(\"/not-authorized\")\n        }\n\n        if(userInfo.LoggedIn === props.LoggedIn){\n            setgrantAccess(true)\n        }\n        else{\n            navigate(\"/login\")\n        }\n\n    }\n    \n\n    useEffect(() => {\n        if(!effectRan.current){\n\n            checkUser()\n        \n            effectRan.current = true\n        }\n    }, [])\n    \n    \n    return grantAccess ? props.Route : null\n}"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAE9B,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9B,MAAMU,SAAS,GAAGP,MAAM,CAAC,KAAK,CAAC;EAE/B,MAAM,CAAEQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,SAAS,CAAC,GAAGV,UAAU,EAAE;EAEzC,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAE1B,MAAMC,QAAQ,GAAG,MAAMX,gBAAgB,CAACQ,OAAO,CAACI,UAAU,CAAC;IAE3D,IAAG,CAACV,KAAK,CAACW,KAAK,CAACC,QAAQ,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAC;MACpCX,QAAQ,CAAC,iBAAiB,CAAC;IAC/B;IAEA,IAAGO,QAAQ,CAACK,QAAQ,KAAKd,KAAK,CAACc,QAAQ,EAAC;MACpCT,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,MACG;MACAH,QAAQ,CAAC,QAAQ,CAAC;IACtB;EAEJ,CAAC;EAGDR,SAAS,CAAC,MAAM;IACZ,IAAG,CAACS,SAAS,CAACY,OAAO,EAAC;MAElBP,SAAS,EAAE;MAEXL,SAAS,CAACY,OAAO,GAAG,IAAI;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,OAAOX,WAAW,GAAGJ,KAAK,CAACgB,KAAK,GAAG,IAAI;AAC3C;AAACf,EAAA,CAtCeF,WAAW;EAAA,QAENN,WAAW,EAKCI,UAAU;AAAA;AAAAoB,EAAA,GAP3BlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}