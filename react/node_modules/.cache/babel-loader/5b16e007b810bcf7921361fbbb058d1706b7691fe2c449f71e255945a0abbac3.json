{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport { authenticateUser } from \"./authenticateUser\";\nimport { useNavigate } from \"react-router-dom\";\nexport function SecureRoute(props) {\n  _s();\n  const navigate = useNavigate();\n  const effectRan = useRef(false);\n\n  //State and cookies\n\n  const [grantAccess, setgrantAccess] = useState(false);\n  const [cookies, setCookie] = useCookies();\n  const checkUser = async () => {\n    const userInfo = await authenticateUser(cookies.session_id);\n\n    //User is logged in but it's role doesn't match the specified ones\n\n    if (userInfo.LoggedIn && !props.roles.includes(userInfo.role)) {\n      navigate(\"/not-authorized\");\n    }\n\n    //User login status matches the one specifed\n    else if (userInfo.LoggedIn === props.LoggedIn) {\n      setgrantAccess(true);\n    }\n\n    //Redirect the user to the specifed url\n    else {\n      window.location.href = props.Redirect;\n    }\n  };\n\n  //Plays at page load\n\n  useEffect(() => {\n    if (!effectRan.current) {\n      checkUser();\n      effectRan.current = true;\n    }\n  }, []);\n  return grantAccess ? props.Route : null;\n}\n_s(SecureRoute, \"5UBwe5avHxoNgo4d1qkyPW20lWI=\", false, function () {\n  return [useNavigate, useCookies];\n});\n_c = SecureRoute;\nvar _c;\n$RefreshReg$(_c, \"SecureRoute\");","map":{"version":3,"names":["useEffect","useState","useRef","useCookies","authenticateUser","useNavigate","SecureRoute","props","_s","navigate","effectRan","grantAccess","setgrantAccess","cookies","setCookie","checkUser","userInfo","session_id","LoggedIn","roles","includes","role","window","location","href","Redirect","current","Route","_c","$RefreshReg$"],"sources":["/home/albi/Desktop/gitrep/PetStoreAndClinic/src/util/secureRoute.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\"\nimport { useCookies } from 'react-cookie';\nimport { authenticateUser } from \"./authenticateUser\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport function SecureRoute(props){\n\n    const navigate = useNavigate()\n\n    const effectRan = useRef(false)\n\n    //State and cookies\n    \n    const [ grantAccess, setgrantAccess] = useState(false)\n    const [cookies, setCookie] = useCookies();\n\n    const checkUser = async () => {\n\n        const userInfo = await authenticateUser(cookies.session_id)\n\n        //User is logged in but it's role doesn't match the specified ones\n\n        if(userInfo.LoggedIn && !props.roles.includes(userInfo.role)){\n            navigate(\"/not-authorized\")\n        }\n\n        //User login status matches the one specifed\n\n        else if(userInfo.LoggedIn === props.LoggedIn){\n            setgrantAccess(true)\n        }\n\n        //Redirect the user to the specifed url\n\n        else{\n            window.location.href=props.Redirect\n        }\n\n\n    }\n    \n    //Plays at page load\n\n    useEffect(() => {\n\n        if(!effectRan.current){\n\n            checkUser()\n        \n            effectRan.current = true\n        }\n    }, [])\n    \n    \n    return grantAccess ? props.Route : null\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAE9B,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,MAAMK,SAAS,GAAGR,MAAM,CAAC,KAAK,CAAC;;EAE/B;;EAEA,MAAM,CAAES,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACY,OAAO,EAAEC,SAAS,CAAC,GAAGX,UAAU,EAAE;EAEzC,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAE1B,MAAMC,QAAQ,GAAG,MAAMZ,gBAAgB,CAACS,OAAO,CAACI,UAAU,CAAC;;IAE3D;;IAEA,IAAGD,QAAQ,CAACE,QAAQ,IAAI,CAACX,KAAK,CAACY,KAAK,CAACC,QAAQ,CAACJ,QAAQ,CAACK,IAAI,CAAC,EAAC;MACzDZ,QAAQ,CAAC,iBAAiB,CAAC;IAC/B;;IAEA;IAAA,KAEK,IAAGO,QAAQ,CAACE,QAAQ,KAAKX,KAAK,CAACW,QAAQ,EAAC;MACzCN,cAAc,CAAC,IAAI,CAAC;IACxB;;IAEA;IAAA,KAEI;MACAU,MAAM,CAACC,QAAQ,CAACC,IAAI,GAACjB,KAAK,CAACkB,QAAQ;IACvC;EAGJ,CAAC;;EAED;;EAEAzB,SAAS,CAAC,MAAM;IAEZ,IAAG,CAACU,SAAS,CAACgB,OAAO,EAAC;MAElBX,SAAS,EAAE;MAEXL,SAAS,CAACgB,OAAO,GAAG,IAAI;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,OAAOf,WAAW,GAAGJ,KAAK,CAACoB,KAAK,GAAG,IAAI;AAC3C;AAACnB,EAAA,CAlDeF,WAAW;EAAA,QAEND,WAAW,EAOCF,UAAU;AAAA;AAAAyB,EAAA,GAT3BtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}