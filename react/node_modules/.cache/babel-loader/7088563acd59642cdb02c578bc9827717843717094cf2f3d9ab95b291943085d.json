{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\albic\\\\OneDrive\\\\Desktop\\\\School Project\\\\PetStoreAndClinic\\\\src\\\\components\\\\login\\\\login.js\",\n  _s = $RefreshSig$();\nimport { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n  const navigate = useNavigate();\n\n  //State and cookies\n\n  const [error, setError] = useState(\"\");\n  const [cookies, setCookie] = useCookies();\n\n  //Set cookies in batches\n\n  const handleCookies = cookie_list => {\n    cookie_list.forEach(cookie => {\n      setCookie(cookie.cookie_name, cookie.cookie_value, {\n        path: cookie.cookie_path\n      });\n    });\n  };\n\n  /*\r\n  *\r\n  * NEED TO REWORK\r\n  * \r\n  * Add request to back end.\r\n  */\n\n  const onSubmit = async () => {\n    setError(\"\");\n    if (formik.values.username === \"admin\" && formik.values.password === \"admin\") {\n      handleCookies([{\n        cookie_name: \"access_token\",\n        cookie_value: \"asdasdasdasdasdasd\",\n        cookie_path: \"/\"\n      }, {\n        cookie_name: \"session_id\",\n        cookie_value: \"1111\",\n        cookie_path: \"/\"\n      }]);\n      navigate(\"/\");\n    } else {\n      setError(\"Wrong Username or Password\");\n    }\n  };\n\n  //Used to get the values form the form and specify submit function\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome Back!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        value: formik.values.username,\n        onChange: formik.handleChange,\n        placeholder: \"username\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        placeholder: \"Password\",\n        size: \"large\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        size: \"large\",\n        kind: \"primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"/dq6tjlhZtvu7rAsR6B6nBXaq2g=\", false, function () {\n  return [useNavigate, useCookies, useFormik];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useFormik","useState","useCookies","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","error","setError","cookies","setCookie","handleCookies","cookie_list","forEach","cookie","cookie_name","cookie_value","path","cookie_path","onSubmit","formik","values","username","password","initialValues","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","handleChange","placeholder","size","type","kind","_c","$RefreshReg$"],"sources":["C:/Users/albic/OneDrive/Desktop/School Project/PetStoreAndClinic/src/components/login/login.js"],"sourcesContent":["import { useFormik } from \"formik\";\r\nimport { useState } from \"react\"\r\nimport { useCookies } from 'react-cookie';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport function Login() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    //State and cookies\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [cookies, setCookie] = useCookies();\r\n\r\n\r\n    //Set cookies in batches\r\n\r\n    const handleCookies = (cookie_list) => {\r\n\r\n        cookie_list.forEach(cookie => {\r\n            setCookie(cookie.cookie_name, cookie.cookie_value, {\r\n                path: cookie.cookie_path\r\n            });\r\n        })\r\n    };\r\n\r\n\r\n\r\n    /*\r\n    *\r\n    * NEED TO REWORK\r\n    * \r\n    * Add request to back end.\r\n    */\r\n\r\n    const onSubmit = async () => {\r\n        setError(\"\");\r\n        if (formik.values.username === \"admin\" && formik.values.password === \"admin\") {\r\n\r\n            handleCookies([{\r\n                    cookie_name: \"access_token\",\r\n                    cookie_value: \"asdasdasdasdasdasd\",\r\n                    cookie_path: \"/\"\r\n                },\r\n                {\r\n                    cookie_name: \"session_id\",\r\n                    cookie_value: \"1111\",\r\n                    cookie_path: \"/\"\r\n                }\r\n            ])\r\n\r\n            navigate(\"/\")\r\n            \r\n        } else {\r\n            setError(\"Wrong Username or Password\")\r\n        }\r\n    }\r\n\r\n\r\n    //Used to get the values form the form and specify submit function\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: \"\",\r\n            password: \"\",\r\n        },\r\n        onSubmit,\r\n    });\r\n    \r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <h1>Welcome Back!</h1>\r\n            <p>{error}</p>\r\n            <div>\r\n                <input\r\n                name=\"username\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n                placeholder=\"username\"\r\n                size=\"large\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <input\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                placeholder=\"Password\"\r\n                size=\"large\"\r\n                type=\"password\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button size=\"large\" kind=\"primary\" type=\"submit\">\r\n                Login\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}