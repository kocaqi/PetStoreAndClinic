{"ast":null,"code":"/*\nCopyright (c) Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport deepMerge from '../../utils/deep-merge';\nimport { LightTheme } from '../light-theme/light-theme';\nimport { typography as moveTypography, fontTokens as moveFontTokens } from './typography';\nimport getTypography from '../shared/typography';\nexport var LightThemeMove = deepMerge({}, LightTheme, {\n  name: 'light-theme-with-move',\n  // For the move theme we need to override typography values\n  // in the default lightTheme with a font values that reference\n  // our custom font family. In addition to it we want to replace some\n  // of the fonts with an additional secondary font that specified\n  // in `moveTypography`. For it we'll get the typography value built\n  // with a custom font using `getTypography` helper and extend the result\n  // value with the customized set of fonts that reference a secondary font\n  typography: deepMerge(getTypography(moveFontTokens), moveTypography)\n});","map":{"version":3,"names":["deepMerge","LightTheme","typography","moveTypography","fontTokens","moveFontTokens","getTypography","LightThemeMove","name"],"sources":["/home/albi/Documents/ReactProject/pet-shop/node_modules/baseui/esm/themes/move-theme/light-theme-with-move.js"],"sourcesContent":["/*\nCopyright (c) Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport deepMerge from '../../utils/deep-merge';\nimport { LightTheme } from '../light-theme/light-theme';\nimport { typography as moveTypography, fontTokens as moveFontTokens } from './typography';\nimport getTypography from '../shared/typography';\nexport var LightThemeMove = deepMerge({}, LightTheme, {\n  name: 'light-theme-with-move',\n  // For the move theme we need to override typography values\n  // in the default lightTheme with a font values that reference\n  // our custom font family. In addition to it we want to replace some\n  // of the fonts with an additional secondary font that specified\n  // in `moveTypography`. For it we'll get the typography value built\n  // with a custom font using `getTypography` helper and extend the result\n  // value with the customized set of fonts that reference a secondary font\n  typography: deepMerge(getTypography(moveFontTokens), moveTypography)\n});"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,UAAU,IAAIC,cAAc,EAAEC,UAAU,IAAIC,cAAc,QAAQ,cAAc;AACzF,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAO,IAAIC,cAAc,GAAGP,SAAS,CAAC,CAAC,CAAC,EAAEC,UAAU,EAAE;EACpDO,IAAI,EAAE,uBAAuB;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACAN,UAAU,EAAEF,SAAS,CAACM,aAAa,CAACD,cAAc,CAAC,EAAEF,cAAc;AACrE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}