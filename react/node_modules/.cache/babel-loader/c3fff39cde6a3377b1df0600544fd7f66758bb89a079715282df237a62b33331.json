{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar React = _interopDefault(require('react'));\nvar reactDom = require('react-dom');\nvar invariant = _interopDefault(require('invariant'));\nvar warning = _interopDefault(require('warning'));\nfunction _defaults2(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _defaults2(subClass, superClass);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction setInputSelection(input, start, end) {\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = end;\n  } else {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveStart('character', start);\n    range.moveEnd('character', end - start);\n    range.select();\n  }\n}\nfunction getInputSelection(input) {\n  var start = 0;\n  var end = 0;\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    start = input.selectionStart;\n    end = input.selectionEnd;\n  } else {\n    var range = document.selection.createRange();\n    if (range.parentElement() === input) {\n      start = -range.moveStart('character', -input.value.length);\n      end = -range.moveEnd('character', -input.value.length);\n    }\n  }\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\nvar defaultFormatChars = {\n  '9': '[0-9]',\n  'a': '[A-Za-z]',\n  '*': '[A-Za-z0-9]'\n};\nvar defaultMaskChar = '_';\nfunction parseMask(mask, maskChar, formatChars) {\n  var parsedMaskString = '';\n  var prefix = '';\n  var lastEditablePosition = null;\n  var permanents = [];\n  if (maskChar === undefined) {\n    maskChar = defaultMaskChar;\n  }\n  if (formatChars == null) {\n    formatChars = defaultFormatChars;\n  }\n  if (!mask || typeof mask !== 'string') {\n    return {\n      maskChar: maskChar,\n      formatChars: formatChars,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n  var isPermanent = false;\n  mask.split('').forEach(function (character) {\n    if (!isPermanent && character === '\\\\') {\n      isPermanent = true;\n    } else {\n      if (isPermanent || !formatChars[character]) {\n        permanents.push(parsedMaskString.length);\n        if (parsedMaskString.length === permanents.length - 1) {\n          prefix += character;\n        }\n      } else {\n        lastEditablePosition = parsedMaskString.length + 1;\n      }\n      parsedMaskString += character;\n      isPermanent = false;\n    }\n  });\n  return {\n    maskChar: maskChar,\n    formatChars: formatChars,\n    prefix: prefix,\n    mask: parsedMaskString,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\nfunction isPermanentCharacter(maskOptions, pos) {\n  return maskOptions.permanents.indexOf(pos) !== -1;\n}\nfunction isAllowedCharacter(maskOptions, pos, character) {\n  var mask = maskOptions.mask,\n    formatChars = maskOptions.formatChars;\n  if (!character) {\n    return false;\n  }\n  if (isPermanentCharacter(maskOptions, pos)) {\n    return mask[pos] === character;\n  }\n  var ruleChar = mask[pos];\n  var charRule = formatChars[ruleChar];\n  return new RegExp(charRule).test(character);\n}\nfunction isEmpty(maskOptions, value) {\n  return value.split('').every(function (character, i) {\n    return isPermanentCharacter(maskOptions, i) || !isAllowedCharacter(maskOptions, i, character);\n  });\n}\nfunction getFilledLength(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n    prefix = maskOptions.prefix;\n  if (!maskChar) {\n    while (value.length > prefix.length && isPermanentCharacter(maskOptions, value.length - 1)) {\n      value = value.slice(0, value.length - 1);\n    }\n    return value.length;\n  }\n  var filledLength = prefix.length;\n  for (var i = value.length; i >= prefix.length; i--) {\n    var character = value[i];\n    var isEnteredCharacter = !isPermanentCharacter(maskOptions, i) && isAllowedCharacter(maskOptions, i, character);\n    if (isEnteredCharacter) {\n      filledLength = i + 1;\n      break;\n    }\n  }\n  return filledLength;\n}\nfunction isFilled(maskOptions, value) {\n  return getFilledLength(maskOptions, value) === maskOptions.mask.length;\n}\nfunction formatValue(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n    mask = maskOptions.mask,\n    prefix = maskOptions.prefix;\n  if (!maskChar) {\n    value = insertString(maskOptions, '', value, 0);\n    if (value.length < prefix.length) {\n      value = prefix;\n    }\n    while (value.length < mask.length && isPermanentCharacter(maskOptions, value.length)) {\n      value += mask[value.length];\n    }\n    return value;\n  }\n  if (value) {\n    var emptyValue = formatValue(maskOptions, '');\n    return insertString(maskOptions, emptyValue, value, 0);\n  }\n  for (var i = 0; i < mask.length; i++) {\n    if (isPermanentCharacter(maskOptions, i)) {\n      value += mask[i];\n    } else {\n      value += maskChar;\n    }\n  }\n  return value;\n}\nfunction clearRange(maskOptions, value, start, len) {\n  var end = start + len;\n  var maskChar = maskOptions.maskChar,\n    mask = maskOptions.mask,\n    prefix = maskOptions.prefix;\n  var arrayValue = value.split('');\n  if (!maskChar) {\n    // remove any permanent chars after clear range, they will be added back by formatValue\n    for (var i = end; i < arrayValue.length; i++) {\n      if (isPermanentCharacter(maskOptions, i)) {\n        arrayValue[i] = '';\n      }\n    }\n    start = Math.max(prefix.length, start);\n    arrayValue.splice(start, end - start);\n    value = arrayValue.join('');\n    return formatValue(maskOptions, value);\n  }\n  return arrayValue.map(function (character, i) {\n    if (i < start || i >= end) {\n      return character;\n    }\n    if (isPermanentCharacter(maskOptions, i)) {\n      return mask[i];\n    }\n    return maskChar;\n  }).join('');\n}\nfunction insertString(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n    maskChar = maskOptions.maskChar,\n    prefix = maskOptions.prefix;\n  var arrayInsertStr = insertStr.split('');\n  var isInputFilled = isFilled(maskOptions, value);\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n  var isUsableCharacter = function isUsableCharacter(character, pos) {\n    return !maskChar || !isPermanentCharacter(maskOptions, pos) || character !== maskChar;\n  };\n  if (!maskChar && insertPosition > value.length) {\n    value += mask.slice(value.length, insertPosition);\n  }\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      if (insertPosition >= value.length) {\n        value += mask[insertPosition];\n      }\n      if (!isUsableCharacter(insertCharacter, insertPosition)) {\n        return true;\n      }\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n    if (!isAllowed) {\n      return true;\n    }\n    if (insertPosition < value.length) {\n      if (maskChar || isInputFilled || insertPosition < prefix.length) {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition + 1);\n      } else {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition);\n        value = formatValue(maskOptions, value);\n      }\n    } else if (!maskChar) {\n      value += insertCharacter;\n    }\n    insertPosition++; // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return value;\n}\nfunction getInsertStringLength(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n    maskChar = maskOptions.maskChar;\n  var arrayInsertStr = insertStr.split('');\n  var initialInsertPosition = insertPosition;\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n    if (isAllowed) {\n      insertPosition++;\n    } // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return insertPosition - initialInsertPosition;\n}\nfunction getLeftEditablePosition(maskOptions, pos) {\n  for (var i = pos; i >= 0; --i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n  return null;\n}\nfunction getRightEditablePosition(maskOptions, pos) {\n  var mask = maskOptions.mask;\n  for (var i = pos; i < mask.length; ++i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n  return null;\n}\nfunction getStringValue(value) {\n  return !value && value !== 0 ? '' : value + '';\n}\nfunction processChange(maskOptions, value, selection, previousValue, previousSelection) {\n  var mask = maskOptions.mask,\n    prefix = maskOptions.prefix,\n    lastEditablePosition = maskOptions.lastEditablePosition;\n  var newValue = value;\n  var enteredString = '';\n  var formattedEnteredStringLength = 0;\n  var removedLength = 0;\n  var cursorPosition = Math.min(previousSelection.start, selection.start);\n  if (selection.end > previousSelection.start) {\n    enteredString = newValue.slice(previousSelection.start, selection.end);\n    formattedEnteredStringLength = getInsertStringLength(maskOptions, previousValue, enteredString, cursorPosition);\n    if (!formattedEnteredStringLength) {\n      removedLength = 0;\n    } else {\n      removedLength = previousSelection.length;\n    }\n  } else if (newValue.length < previousValue.length) {\n    removedLength = previousValue.length - newValue.length;\n  }\n  newValue = previousValue;\n  if (removedLength) {\n    if (removedLength === 1 && !previousSelection.length) {\n      var deleteFromRight = previousSelection.start === selection.start;\n      cursorPosition = deleteFromRight ? getRightEditablePosition(maskOptions, selection.start) : getLeftEditablePosition(maskOptions, selection.start);\n    }\n    newValue = clearRange(maskOptions, newValue, cursorPosition, removedLength);\n  }\n  newValue = insertString(maskOptions, newValue, enteredString, cursorPosition);\n  cursorPosition = cursorPosition + formattedEnteredStringLength;\n  if (cursorPosition >= mask.length) {\n    cursorPosition = mask.length;\n  } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n    cursorPosition = prefix.length;\n  } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n    cursorPosition = getRightEditablePosition(maskOptions, cursorPosition);\n  }\n  newValue = formatValue(maskOptions, newValue);\n  if (!enteredString) {\n    enteredString = null;\n  }\n  return {\n    value: newValue,\n    enteredString: enteredString,\n    selection: {\n      start: cursorPosition,\n      end: cursorPosition\n    }\n  };\n}\nfunction isWindowsPhoneBrowser() {\n  var windows = new RegExp('windows', 'i');\n  var phone = new RegExp('phone', 'i');\n  var ua = navigator.userAgent;\n  return windows.test(ua) && phone.test(ua);\n}\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\nfunction getRequestAnimationFrame() {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n}\nfunction getCancelAnimationFrame() {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n}\nfunction defer(fn) {\n  var hasCancelAnimationFrame = !!getCancelAnimationFrame();\n  var deferFn;\n  if (hasCancelAnimationFrame) {\n    deferFn = getRequestAnimationFrame();\n  } else {\n    deferFn = function deferFn() {\n      return setTimeout(fn, 1000 / 60);\n    };\n  }\n  return deferFn(fn);\n}\nfunction cancelDefer(deferId) {\n  var cancelFn = getCancelAnimationFrame() || clearTimeout;\n  cancelFn(deferId);\n}\nvar InputElement = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputElement, _React$Component);\n  function InputElement(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this;\n    _this.focused = false;\n    _this.mounted = false;\n    _this.previousSelection = null;\n    _this.selectionDeferId = null;\n    _this.saveSelectionLoopDeferId = null;\n    _this.saveSelectionLoop = function () {\n      _this.previousSelection = _this.getSelection();\n      _this.saveSelectionLoopDeferId = defer(_this.saveSelectionLoop);\n    };\n    _this.runSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId === null) {\n        _this.saveSelectionLoop();\n      }\n    };\n    _this.stopSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId !== null) {\n        cancelDefer(_this.saveSelectionLoopDeferId);\n        _this.saveSelectionLoopDeferId = null;\n        _this.previousSelection = null;\n      }\n    };\n    _this.getInputDOMNode = function () {\n      if (!_this.mounted) {\n        return null;\n      }\n      var input = reactDom.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var isDOMNode = typeof window !== 'undefined' && input instanceof window.Element; // workaround for react-test-renderer\n      // https://github.com/sanniassin/react-input-mask/issues/147\n\n      if (input && !isDOMNode) {\n        return null;\n      }\n      if (input.nodeName !== 'INPUT') {\n        input = input.querySelector('input');\n      }\n      if (!input) {\n        throw new Error('react-input-mask: inputComponent doesn\\'t contain input node');\n      }\n      return input;\n    };\n    _this.getInputValue = function () {\n      var input = _this.getInputDOMNode();\n      if (!input) {\n        return null;\n      }\n      return input.value;\n    };\n    _this.setInputValue = function (value) {\n      var input = _this.getInputDOMNode();\n      if (!input) {\n        return;\n      }\n      _this.value = value;\n      input.value = value;\n    };\n    _this.setCursorToEnd = function () {\n      var filledLength = getFilledLength(_this.maskOptions, _this.value);\n      var pos = getRightEditablePosition(_this.maskOptions, filledLength);\n      if (pos !== null) {\n        _this.setCursorPosition(pos);\n      }\n    };\n    _this.setSelection = function (start, end, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var input = _this.getInputDOMNode();\n      var isFocused = _this.isFocused(); // don't change selection on unfocused input\n      // because Safari sets focus on selection change (#154)\n\n      if (!input || !isFocused) {\n        return;\n      }\n      var _options = options,\n        deferred = _options.deferred;\n      if (!deferred) {\n        setInputSelection(input, start, end);\n      }\n      if (_this.selectionDeferId !== null) {\n        cancelDefer(_this.selectionDeferId);\n      } // deferred selection update is required for pre-Lollipop Android browser,\n      // but for consistent behavior we do it for all browsers\n\n      _this.selectionDeferId = defer(function () {\n        _this.selectionDeferId = null;\n        setInputSelection(input, start, end);\n      });\n      _this.previousSelection = {\n        start: start,\n        end: end,\n        length: Math.abs(end - start)\n      };\n    };\n    _this.getSelection = function () {\n      var input = _this.getInputDOMNode();\n      return getInputSelection(input);\n    };\n    _this.getCursorPosition = function () {\n      return _this.getSelection().start;\n    };\n    _this.setCursorPosition = function (pos) {\n      _this.setSelection(pos, pos);\n    };\n    _this.isFocused = function () {\n      return _this.focused;\n    };\n    _this.getBeforeMaskedValueChangeConfig = function () {\n      var _this$maskOptions = _this.maskOptions,\n        mask = _this$maskOptions.mask,\n        maskChar = _this$maskOptions.maskChar,\n        permanents = _this$maskOptions.permanents,\n        formatChars = _this$maskOptions.formatChars;\n      var alwaysShowMask = _this.props.alwaysShowMask;\n      return {\n        mask: mask,\n        maskChar: maskChar,\n        permanents: permanents,\n        alwaysShowMask: !!alwaysShowMask,\n        formatChars: formatChars\n      };\n    };\n    _this.isInputAutofilled = function (value, selection, previousValue, previousSelection) {\n      var input = _this.getInputDOMNode(); // only check for positive match because it will be false negative\n      // in case of autofill simulation in tests\n      //\n      // input.matches throws an exception if selector isn't supported\n\n      try {\n        if (input.matches(':-webkit-autofill')) {\n          return true;\n        }\n      } catch (e) {} // if input isn't focused then change event must have been triggered\n      // either by autofill or event simulation in tests\n\n      if (!_this.focused) {\n        return true;\n      } // if cursor has moved to the end while previousSelection forbids it\n      // then it must be autofill\n\n      return previousSelection.end < previousValue.length && selection.end === value.length;\n    };\n    _this.onChange = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n        beforePasteState = _assertThisInitialize.beforePasteState;\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n        previousSelection = _assertThisInitialize2.previousSelection;\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var value = _this.getInputValue();\n      var previousValue = _this.value;\n      var selection = _this.getSelection(); // autofill replaces entire value, ignore old one\n      // https://github.com/sanniassin/react-input-mask/issues/113\n\n      if (_this.isInputAutofilled(value, selection, previousValue, previousSelection)) {\n        previousValue = formatValue(_this.maskOptions, '');\n        previousSelection = {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      } // set value and selection as if we haven't\n      // cleared input in onPaste handler\n\n      if (beforePasteState) {\n        previousSelection = beforePasteState.selection;\n        previousValue = beforePasteState.value;\n        selection = {\n          start: previousSelection.start + value.length,\n          end: previousSelection.start + value.length,\n          length: 0\n        };\n        value = previousValue.slice(0, previousSelection.start) + value + previousValue.slice(previousSelection.end);\n        _this.beforePasteState = null;\n      }\n      var changedState = processChange(_this.maskOptions, value, selection, previousValue, previousSelection);\n      var enteredString = changedState.enteredString;\n      var newSelection = changedState.selection;\n      var newValue = changedState.value;\n      if (isFunction(beforeMaskedValueChange)) {\n        var modifiedValue = beforeMaskedValueChange({\n          value: newValue,\n          selection: newSelection\n        }, {\n          value: previousValue,\n          selection: previousSelection\n        }, enteredString, _this.getBeforeMaskedValueChangeConfig());\n        newValue = modifiedValue.value;\n        newSelection = modifiedValue.selection;\n      }\n      _this.setInputValue(newValue);\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event);\n      }\n      if (_this.isWindowsPhoneBrowser) {\n        _this.setSelection(newSelection.start, newSelection.end, {\n          deferred: true\n        });\n      } else {\n        _this.setSelection(newSelection.start, newSelection.end);\n      }\n    };\n    _this.onFocus = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var _this$maskOptions2 = _this.maskOptions,\n        mask = _this$maskOptions2.mask,\n        prefix = _this$maskOptions2.prefix;\n      _this.focused = true; // if autoFocus is set, onFocus triggers before componentDidMount\n\n      _this.mounted = true;\n      if (mask) {\n        if (!_this.value) {\n          var emptyValue = formatValue(_this.maskOptions, prefix);\n          var newValue = formatValue(_this.maskOptions, emptyValue);\n          var filledLength = getFilledLength(_this.maskOptions, newValue);\n          var cursorPosition = getRightEditablePosition(_this.maskOptions, filledLength);\n          var newSelection = {\n            start: cursorPosition,\n            end: cursorPosition\n          };\n          if (isFunction(beforeMaskedValueChange)) {\n            var modifiedValue = beforeMaskedValueChange({\n              value: newValue,\n              selection: newSelection\n            }, {\n              value: _this.value,\n              selection: null\n            }, null, _this.getBeforeMaskedValueChangeConfig());\n            newValue = modifiedValue.value;\n            newSelection = modifiedValue.selection;\n          }\n          var isInputValueChanged = newValue !== _this.getInputValue();\n          if (isInputValueChanged) {\n            _this.setInputValue(newValue);\n          }\n          if (isInputValueChanged && isFunction(_this.props.onChange)) {\n            _this.props.onChange(event);\n          }\n          _this.setSelection(newSelection.start, newSelection.end);\n        } else if (getFilledLength(_this.maskOptions, _this.value) < _this.maskOptions.mask.length) {\n          _this.setCursorToEnd();\n        }\n        _this.runSaveSelectionLoop();\n      }\n      if (isFunction(_this.props.onFocus)) {\n        _this.props.onFocus(event);\n      }\n    };\n    _this.onBlur = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var mask = _this.maskOptions.mask;\n      _this.stopSaveSelectionLoop();\n      _this.focused = false;\n      if (mask && !_this.props.alwaysShowMask && isEmpty(_this.maskOptions, _this.value)) {\n        var newValue = '';\n        if (isFunction(beforeMaskedValueChange)) {\n          var modifiedValue = beforeMaskedValueChange({\n            value: newValue,\n            selection: null\n          }, {\n            value: _this.value,\n            selection: _this.previousSelection\n          }, null, _this.getBeforeMaskedValueChangeConfig());\n          newValue = modifiedValue.value;\n        }\n        var isInputValueChanged = newValue !== _this.getInputValue();\n        if (isInputValueChanged) {\n          _this.setInputValue(newValue);\n        }\n        if (isInputValueChanged && isFunction(_this.props.onChange)) {\n          _this.props.onChange(event);\n        }\n      }\n      if (isFunction(_this.props.onBlur)) {\n        _this.props.onBlur(event);\n      }\n    };\n    _this.onMouseDown = function (event) {\n      // tiny unintentional mouse movements can break cursor\n      // position on focus, so we have to restore it in that case\n      //\n      // https://github.com/sanniassin/react-input-mask/issues/108\n      if (!_this.focused && document.addEventListener) {\n        _this.mouseDownX = event.clientX;\n        _this.mouseDownY = event.clientY;\n        _this.mouseDownTime = new Date().getTime();\n        var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n          document.removeEventListener('mouseup', mouseUpHandler);\n          if (!_this.focused) {\n            return;\n          }\n          var deltaX = Math.abs(mouseUpEvent.clientX - _this.mouseDownX);\n          var deltaY = Math.abs(mouseUpEvent.clientY - _this.mouseDownY);\n          var axisDelta = Math.max(deltaX, deltaY);\n          var timeDelta = new Date().getTime() - _this.mouseDownTime;\n          if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n            _this.setCursorToEnd();\n          }\n        };\n        document.addEventListener('mouseup', mouseUpHandler);\n      }\n      if (isFunction(_this.props.onMouseDown)) {\n        _this.props.onMouseDown(event);\n      }\n    };\n    _this.onPaste = function (event) {\n      if (isFunction(_this.props.onPaste)) {\n        _this.props.onPaste(event);\n      } // event.clipboardData might not work in Android browser\n      // cleaning input to get raw text inside onChange handler\n\n      if (!event.defaultPrevented) {\n        _this.beforePasteState = {\n          value: _this.getInputValue(),\n          selection: _this.getSelection()\n        };\n        _this.setInputValue('');\n      }\n    };\n    _this.handleRef = function (ref) {\n      if (_this.props.children == null && isFunction(_this.props.inputRef)) {\n        _this.props.inputRef(ref);\n      }\n    };\n    var _mask = props.mask,\n      _maskChar = props.maskChar,\n      _formatChars = props.formatChars,\n      _alwaysShowMask = props.alwaysShowMask,\n      _beforeMaskedValueChange = props.beforeMaskedValueChange;\n    var defaultValue = props.defaultValue,\n      _value = props.value;\n    _this.maskOptions = parseMask(_mask, _maskChar, _formatChars);\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    if (_value == null) {\n      _value = defaultValue;\n    }\n    var _newValue = getStringValue(_value);\n    if (_this.maskOptions.mask && (_alwaysShowMask || _newValue)) {\n      _newValue = formatValue(_this.maskOptions, _newValue);\n      if (isFunction(_beforeMaskedValueChange)) {\n        var oldValue = props.value;\n        if (props.value == null) {\n          oldValue = defaultValue;\n        }\n        oldValue = getStringValue(oldValue);\n        var modifiedValue = _beforeMaskedValueChange({\n          value: _newValue,\n          selection: null\n        }, {\n          value: oldValue,\n          selection: null\n        }, null, _this.getBeforeMaskedValueChangeConfig());\n        _newValue = modifiedValue.value;\n      }\n    }\n    _this.value = _newValue;\n    return _this;\n  }\n  var _proto = InputElement.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!this.getInputDOMNode()) {\n      return;\n    }\n    this.isWindowsPhoneBrowser = isWindowsPhoneBrowser();\n    if (this.maskOptions.mask && this.getInputValue() !== this.value) {\n      this.setInputValue(this.value);\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var previousSelection = this.previousSelection;\n    var _this$props = this.props,\n      beforeMaskedValueChange = _this$props.beforeMaskedValueChange,\n      alwaysShowMask = _this$props.alwaysShowMask,\n      mask = _this$props.mask,\n      maskChar = _this$props.maskChar,\n      formatChars = _this$props.formatChars;\n    var previousMaskOptions = this.maskOptions;\n    var showEmpty = alwaysShowMask || this.isFocused();\n    var hasValue = this.props.value != null;\n    var newValue = hasValue ? getStringValue(this.props.value) : this.value;\n    var cursorPosition = previousSelection ? previousSelection.start : null;\n    this.maskOptions = parseMask(mask, maskChar, formatChars);\n    if (!this.maskOptions.mask) {\n      if (previousMaskOptions.mask) {\n        this.stopSaveSelectionLoop(); // render depends on this.maskOptions and this.value,\n        // call forceUpdate to keep it in sync\n\n        this.forceUpdate();\n      }\n      return;\n    } else if (!previousMaskOptions.mask && this.isFocused()) {\n      this.runSaveSelectionLoop();\n    }\n    var isMaskChanged = this.maskOptions.mask && this.maskOptions.mask !== previousMaskOptions.mask;\n    if (!previousMaskOptions.mask && !hasValue) {\n      newValue = this.getInputValue();\n    }\n    if (isMaskChanged || this.maskOptions.mask && (newValue || showEmpty)) {\n      newValue = formatValue(this.maskOptions, newValue);\n    }\n    if (isMaskChanged) {\n      var filledLength = getFilledLength(this.maskOptions, newValue);\n      if (cursorPosition === null || filledLength < cursorPosition) {\n        if (isFilled(this.maskOptions, newValue)) {\n          cursorPosition = filledLength;\n        } else {\n          cursorPosition = getRightEditablePosition(this.maskOptions, filledLength);\n        }\n      }\n    }\n    if (this.maskOptions.mask && isEmpty(this.maskOptions, newValue) && !showEmpty && (!hasValue || !this.props.value)) {\n      newValue = '';\n    }\n    var newSelection = {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n    if (isFunction(beforeMaskedValueChange)) {\n      var modifiedValue = beforeMaskedValueChange({\n        value: newValue,\n        selection: newSelection\n      }, {\n        value: this.value,\n        selection: this.previousSelection\n      }, null, this.getBeforeMaskedValueChangeConfig());\n      newValue = modifiedValue.value;\n      newSelection = modifiedValue.selection;\n    }\n    this.value = newValue;\n    var isValueChanged = this.getInputValue() !== this.value; // render depends on this.maskOptions and this.value,\n    // call forceUpdate to keep it in sync\n\n    if (isValueChanged) {\n      this.setInputValue(this.value);\n      this.forceUpdate();\n    } else if (isMaskChanged) {\n      this.forceUpdate();\n    }\n    var isSelectionChanged = false;\n    if (newSelection.start != null && newSelection.end != null) {\n      isSelectionChanged = !previousSelection || previousSelection.start !== newSelection.start || previousSelection.end !== newSelection.end;\n    }\n    if (isSelectionChanged || isValueChanged) {\n      this.setSelection(newSelection.start, newSelection.end);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n    if (this.selectionDeferId !== null) {\n      cancelDefer(this.selectionDeferId);\n    }\n    this.stopSaveSelectionLoop();\n  };\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n      mask = _this$props2.mask,\n      alwaysShowMask = _this$props2.alwaysShowMask,\n      maskChar = _this$props2.maskChar,\n      formatChars = _this$props2.formatChars,\n      inputRef = _this$props2.inputRef,\n      beforeMaskedValueChange = _this$props2.beforeMaskedValueChange,\n      children = _this$props2.children,\n      restProps = _objectWithoutPropertiesLoose(_this$props2, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\", \"inputRef\", \"beforeMaskedValueChange\", \"children\"]);\n    var inputElement;\n    process.env.NODE_ENV !== \"production\" ? warning(\n    // parse mask to test against actual mask prop as this.maskOptions\n    // will be updated later in componentDidUpdate\n    !restProps.maxLength || !parseMask(mask, maskChar, formatChars).mask, 'react-input-mask: maxLength property shouldn\\'t be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.') : void 0;\n    if (children) {\n      !isFunction(children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'react-input-mask: children must be a function') : invariant(false) : void 0;\n      var controlledProps = ['onChange', 'onPaste', 'onMouseDown', 'onFocus', 'onBlur', 'value', 'disabled', 'readOnly'];\n      var childrenProps = _extends({}, restProps);\n      controlledProps.forEach(function (propId) {\n        return delete childrenProps[propId];\n      });\n      inputElement = children(childrenProps);\n      var conflictProps = controlledProps.filter(function (propId) {\n        return inputElement.props[propId] != null && inputElement.props[propId] !== restProps[propId];\n      });\n      !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the react-input-mask's component and should not be altered in children's function: \" + conflictProps.join(', ')) : invariant(false) : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!inputRef, 'react-input-mask: inputRef is ignored when children is passed, attach ref to the children instead') : void 0;\n    } else {\n      inputElement = React.createElement(\"input\", _extends({\n        ref: this.handleRef\n      }, restProps));\n    }\n    var changedProps = {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    };\n    if (this.maskOptions.mask) {\n      if (!restProps.disabled && !restProps.readOnly) {\n        changedProps.onChange = this.onChange;\n        changedProps.onPaste = this.onPaste;\n        changedProps.onMouseDown = this.onMouseDown;\n      }\n      if (restProps.value != null) {\n        changedProps.value = this.value;\n      }\n    }\n    inputElement = React.cloneElement(inputElement, changedProps);\n    return inputElement;\n  };\n  return InputElement;\n}(React.Component);\nmodule.exports = InputElement;","map":{"version":3,"names":["_interopDefault","ex","React","require","reactDom","invariant","warning","_defaults2","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_assertThisInitialized","self","ReferenceError","setInputSelection","input","start","end","selectionStart","selectionEnd","range","createTextRange","collapse","moveStart","moveEnd","select","getInputSelection","document","selection","createRange","parentElement","defaultFormatChars","defaultMaskChar","parseMask","mask","maskChar","formatChars","parsedMaskString","prefix","lastEditablePosition","permanents","isPermanent","split","forEach","character","push","isPermanentCharacter","maskOptions","pos","isAllowedCharacter","ruleChar","charRule","RegExp","test","isEmpty","every","getFilledLength","slice","filledLength","isEnteredCharacter","isFilled","formatValue","insertString","emptyValue","clearRange","len","arrayValue","Math","max","splice","join","map","insertStr","insertPosition","arrayInsertStr","isInputFilled","isUsablePosition","isUsableCharacter","insertCharacter","isAllowed","getInsertStringLength","initialInsertPosition","getLeftEditablePosition","getRightEditablePosition","getStringValue","processChange","previousValue","previousSelection","newValue","enteredString","formattedEnteredStringLength","removedLength","cursorPosition","min","deleteFromRight","isWindowsPhoneBrowser","windows","phone","ua","navigator","userAgent","isFunction","getRequestAnimationFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","getCancelAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","defer","fn","hasCancelAnimationFrame","deferFn","setTimeout","cancelDefer","deferId","cancelFn","clearTimeout","InputElement","_React$Component","props","_this","focused","mounted","selectionDeferId","saveSelectionLoopDeferId","saveSelectionLoop","getSelection","runSaveSelectionLoop","stopSaveSelectionLoop","getInputDOMNode","findDOMNode","isDOMNode","Element","nodeName","querySelector","Error","getInputValue","setInputValue","setCursorToEnd","setCursorPosition","setSelection","options","isFocused","_options","deferred","abs","getCursorPosition","getBeforeMaskedValueChangeConfig","_this$maskOptions","alwaysShowMask","isInputAutofilled","matches","e","onChange","event","_assertThisInitialize","beforePasteState","_assertThisInitialize2","beforeMaskedValueChange","changedState","newSelection","modifiedValue","onFocus","_this$maskOptions2","isInputValueChanged","onBlur","onMouseDown","addEventListener","mouseDownX","clientX","mouseDownY","clientY","mouseDownTime","Date","getTime","mouseUpHandler","mouseUpEvent","removeEventListener","deltaX","deltaY","axisDelta","timeDelta","onPaste","defaultPrevented","handleRef","ref","children","inputRef","_mask","_maskChar","_formatChars","_alwaysShowMask","_beforeMaskedValueChange","defaultValue","_value","_newValue","oldValue","_proto","componentDidMount","componentDidUpdate","_this$props","previousMaskOptions","showEmpty","hasValue","forceUpdate","isMaskChanged","isValueChanged","isSelectionChanged","componentWillUnmount","render","_this$props2","restProps","inputElement","process","env","NODE_ENV","maxLength","controlledProps","childrenProps","propId","conflictProps","filter","createElement","changedProps","disabled","readOnly","cloneElement","Component","module","exports"],"sources":["/home/albi/Documents/ReactProject/pet-shop/node_modules/react-input-mask/lib/react-input-mask.development.js"],"sourcesContent":["'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = _interopDefault(require('react'));\nvar reactDom = require('react-dom');\nvar invariant = _interopDefault(require('invariant'));\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction setInputSelection(input, start, end) {\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = end;\n  } else {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveStart('character', start);\n    range.moveEnd('character', end - start);\n    range.select();\n  }\n}\nfunction getInputSelection(input) {\n  var start = 0;\n  var end = 0;\n\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    start = input.selectionStart;\n    end = input.selectionEnd;\n  } else {\n    var range = document.selection.createRange();\n\n    if (range.parentElement() === input) {\n      start = -range.moveStart('character', -input.value.length);\n      end = -range.moveEnd('character', -input.value.length);\n    }\n  }\n\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nvar defaultFormatChars = {\n  '9': '[0-9]',\n  'a': '[A-Za-z]',\n  '*': '[A-Za-z0-9]'\n};\nvar defaultMaskChar = '_';\n\nfunction parseMask (mask, maskChar, formatChars) {\n  var parsedMaskString = '';\n  var prefix = '';\n  var lastEditablePosition = null;\n  var permanents = [];\n\n  if (maskChar === undefined) {\n    maskChar = defaultMaskChar;\n  }\n\n  if (formatChars == null) {\n    formatChars = defaultFormatChars;\n  }\n\n  if (!mask || typeof mask !== 'string') {\n    return {\n      maskChar: maskChar,\n      formatChars: formatChars,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  var isPermanent = false;\n  mask.split('').forEach(function (character) {\n    if (!isPermanent && character === '\\\\') {\n      isPermanent = true;\n    } else {\n      if (isPermanent || !formatChars[character]) {\n        permanents.push(parsedMaskString.length);\n\n        if (parsedMaskString.length === permanents.length - 1) {\n          prefix += character;\n        }\n      } else {\n        lastEditablePosition = parsedMaskString.length + 1;\n      }\n\n      parsedMaskString += character;\n      isPermanent = false;\n    }\n  });\n  return {\n    maskChar: maskChar,\n    formatChars: formatChars,\n    prefix: prefix,\n    mask: parsedMaskString,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\nfunction isPermanentCharacter(maskOptions, pos) {\n  return maskOptions.permanents.indexOf(pos) !== -1;\n}\nfunction isAllowedCharacter(maskOptions, pos, character) {\n  var mask = maskOptions.mask,\n      formatChars = maskOptions.formatChars;\n\n  if (!character) {\n    return false;\n  }\n\n  if (isPermanentCharacter(maskOptions, pos)) {\n    return mask[pos] === character;\n  }\n\n  var ruleChar = mask[pos];\n  var charRule = formatChars[ruleChar];\n  return new RegExp(charRule).test(character);\n}\nfunction isEmpty(maskOptions, value) {\n  return value.split('').every(function (character, i) {\n    return isPermanentCharacter(maskOptions, i) || !isAllowedCharacter(maskOptions, i, character);\n  });\n}\nfunction getFilledLength(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    while (value.length > prefix.length && isPermanentCharacter(maskOptions, value.length - 1)) {\n      value = value.slice(0, value.length - 1);\n    }\n\n    return value.length;\n  }\n\n  var filledLength = prefix.length;\n\n  for (var i = value.length; i >= prefix.length; i--) {\n    var character = value[i];\n    var isEnteredCharacter = !isPermanentCharacter(maskOptions, i) && isAllowedCharacter(maskOptions, i, character);\n\n    if (isEnteredCharacter) {\n      filledLength = i + 1;\n      break;\n    }\n  }\n\n  return filledLength;\n}\nfunction isFilled(maskOptions, value) {\n  return getFilledLength(maskOptions, value) === maskOptions.mask.length;\n}\nfunction formatValue(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    value = insertString(maskOptions, '', value, 0);\n\n    if (value.length < prefix.length) {\n      value = prefix;\n    }\n\n    while (value.length < mask.length && isPermanentCharacter(maskOptions, value.length)) {\n      value += mask[value.length];\n    }\n\n    return value;\n  }\n\n  if (value) {\n    var emptyValue = formatValue(maskOptions, '');\n    return insertString(maskOptions, emptyValue, value, 0);\n  }\n\n  for (var i = 0; i < mask.length; i++) {\n    if (isPermanentCharacter(maskOptions, i)) {\n      value += mask[i];\n    } else {\n      value += maskChar;\n    }\n  }\n\n  return value;\n}\nfunction clearRange(maskOptions, value, start, len) {\n  var end = start + len;\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n  var arrayValue = value.split('');\n\n  if (!maskChar) {\n    // remove any permanent chars after clear range, they will be added back by formatValue\n    for (var i = end; i < arrayValue.length; i++) {\n      if (isPermanentCharacter(maskOptions, i)) {\n        arrayValue[i] = '';\n      }\n    }\n\n    start = Math.max(prefix.length, start);\n    arrayValue.splice(start, end - start);\n    value = arrayValue.join('');\n    return formatValue(maskOptions, value);\n  }\n\n  return arrayValue.map(function (character, i) {\n    if (i < start || i >= end) {\n      return character;\n    }\n\n    if (isPermanentCharacter(maskOptions, i)) {\n      return mask[i];\n    }\n\n    return maskChar;\n  }).join('');\n}\nfunction insertString(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n  var arrayInsertStr = insertStr.split('');\n  var isInputFilled = isFilled(maskOptions, value);\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  var isUsableCharacter = function isUsableCharacter(character, pos) {\n    return !maskChar || !isPermanentCharacter(maskOptions, pos) || character !== maskChar;\n  };\n\n  if (!maskChar && insertPosition > value.length) {\n    value += mask.slice(value.length, insertPosition);\n  }\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      if (insertPosition >= value.length) {\n        value += mask[insertPosition];\n      }\n\n      if (!isUsableCharacter(insertCharacter, insertPosition)) {\n        return true;\n      }\n\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (!isAllowed) {\n      return true;\n    }\n\n    if (insertPosition < value.length) {\n      if (maskChar || isInputFilled || insertPosition < prefix.length) {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition + 1);\n      } else {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition);\n        value = formatValue(maskOptions, value);\n      }\n    } else if (!maskChar) {\n      value += insertCharacter;\n    }\n\n    insertPosition++; // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return value;\n}\nfunction getInsertStringLength(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar;\n  var arrayInsertStr = insertStr.split('');\n  var initialInsertPosition = insertPosition;\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (isAllowed) {\n      insertPosition++;\n    } // stop iteration if maximum value length reached\n\n\n    return insertPosition < mask.length;\n  });\n  return insertPosition - initialInsertPosition;\n}\nfunction getLeftEditablePosition(maskOptions, pos) {\n  for (var i = pos; i >= 0; --i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getRightEditablePosition(maskOptions, pos) {\n  var mask = maskOptions.mask;\n\n  for (var i = pos; i < mask.length; ++i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getStringValue(value) {\n  return !value && value !== 0 ? '' : value + '';\n}\n\nfunction processChange(maskOptions, value, selection, previousValue, previousSelection) {\n  var mask = maskOptions.mask,\n      prefix = maskOptions.prefix,\n      lastEditablePosition = maskOptions.lastEditablePosition;\n  var newValue = value;\n  var enteredString = '';\n  var formattedEnteredStringLength = 0;\n  var removedLength = 0;\n  var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n  if (selection.end > previousSelection.start) {\n    enteredString = newValue.slice(previousSelection.start, selection.end);\n    formattedEnteredStringLength = getInsertStringLength(maskOptions, previousValue, enteredString, cursorPosition);\n\n    if (!formattedEnteredStringLength) {\n      removedLength = 0;\n    } else {\n      removedLength = previousSelection.length;\n    }\n  } else if (newValue.length < previousValue.length) {\n    removedLength = previousValue.length - newValue.length;\n  }\n\n  newValue = previousValue;\n\n  if (removedLength) {\n    if (removedLength === 1 && !previousSelection.length) {\n      var deleteFromRight = previousSelection.start === selection.start;\n      cursorPosition = deleteFromRight ? getRightEditablePosition(maskOptions, selection.start) : getLeftEditablePosition(maskOptions, selection.start);\n    }\n\n    newValue = clearRange(maskOptions, newValue, cursorPosition, removedLength);\n  }\n\n  newValue = insertString(maskOptions, newValue, enteredString, cursorPosition);\n  cursorPosition = cursorPosition + formattedEnteredStringLength;\n\n  if (cursorPosition >= mask.length) {\n    cursorPosition = mask.length;\n  } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n    cursorPosition = prefix.length;\n  } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n    cursorPosition = getRightEditablePosition(maskOptions, cursorPosition);\n  }\n\n  newValue = formatValue(maskOptions, newValue);\n\n  if (!enteredString) {\n    enteredString = null;\n  }\n\n  return {\n    value: newValue,\n    enteredString: enteredString,\n    selection: {\n      start: cursorPosition,\n      end: cursorPosition\n    }\n  };\n}\n\nfunction isWindowsPhoneBrowser() {\n  var windows = new RegExp('windows', 'i');\n  var phone = new RegExp('phone', 'i');\n  var ua = navigator.userAgent;\n  return windows.test(ua) && phone.test(ua);\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction getRequestAnimationFrame() {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n}\n\nfunction getCancelAnimationFrame() {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n}\n\nfunction defer(fn) {\n  var hasCancelAnimationFrame = !!getCancelAnimationFrame();\n  var deferFn;\n\n  if (hasCancelAnimationFrame) {\n    deferFn = getRequestAnimationFrame();\n  } else {\n    deferFn = function deferFn() {\n      return setTimeout(fn, 1000 / 60);\n    };\n  }\n\n  return deferFn(fn);\n}\nfunction cancelDefer(deferId) {\n  var cancelFn = getCancelAnimationFrame() || clearTimeout;\n  cancelFn(deferId);\n}\n\nvar InputElement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputElement, _React$Component);\n\n  function InputElement(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.focused = false;\n    _this.mounted = false;\n    _this.previousSelection = null;\n    _this.selectionDeferId = null;\n    _this.saveSelectionLoopDeferId = null;\n\n    _this.saveSelectionLoop = function () {\n      _this.previousSelection = _this.getSelection();\n      _this.saveSelectionLoopDeferId = defer(_this.saveSelectionLoop);\n    };\n\n    _this.runSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId === null) {\n        _this.saveSelectionLoop();\n      }\n    };\n\n    _this.stopSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId !== null) {\n        cancelDefer(_this.saveSelectionLoopDeferId);\n        _this.saveSelectionLoopDeferId = null;\n        _this.previousSelection = null;\n      }\n    };\n\n    _this.getInputDOMNode = function () {\n      if (!_this.mounted) {\n        return null;\n      }\n\n      var input = reactDom.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var isDOMNode = typeof window !== 'undefined' && input instanceof window.Element; // workaround for react-test-renderer\n      // https://github.com/sanniassin/react-input-mask/issues/147\n\n      if (input && !isDOMNode) {\n        return null;\n      }\n\n      if (input.nodeName !== 'INPUT') {\n        input = input.querySelector('input');\n      }\n\n      if (!input) {\n        throw new Error('react-input-mask: inputComponent doesn\\'t contain input node');\n      }\n\n      return input;\n    };\n\n    _this.getInputValue = function () {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return null;\n      }\n\n      return input.value;\n    };\n\n    _this.setInputValue = function (value) {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return;\n      }\n\n      _this.value = value;\n      input.value = value;\n    };\n\n    _this.setCursorToEnd = function () {\n      var filledLength = getFilledLength(_this.maskOptions, _this.value);\n      var pos = getRightEditablePosition(_this.maskOptions, filledLength);\n\n      if (pos !== null) {\n        _this.setCursorPosition(pos);\n      }\n    };\n\n    _this.setSelection = function (start, end, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var input = _this.getInputDOMNode();\n\n      var isFocused = _this.isFocused(); // don't change selection on unfocused input\n      // because Safari sets focus on selection change (#154)\n\n\n      if (!input || !isFocused) {\n        return;\n      }\n\n      var _options = options,\n          deferred = _options.deferred;\n\n      if (!deferred) {\n        setInputSelection(input, start, end);\n      }\n\n      if (_this.selectionDeferId !== null) {\n        cancelDefer(_this.selectionDeferId);\n      } // deferred selection update is required for pre-Lollipop Android browser,\n      // but for consistent behavior we do it for all browsers\n\n\n      _this.selectionDeferId = defer(function () {\n        _this.selectionDeferId = null;\n        setInputSelection(input, start, end);\n      });\n      _this.previousSelection = {\n        start: start,\n        end: end,\n        length: Math.abs(end - start)\n      };\n    };\n\n    _this.getSelection = function () {\n      var input = _this.getInputDOMNode();\n\n      return getInputSelection(input);\n    };\n\n    _this.getCursorPosition = function () {\n      return _this.getSelection().start;\n    };\n\n    _this.setCursorPosition = function (pos) {\n      _this.setSelection(pos, pos);\n    };\n\n    _this.isFocused = function () {\n      return _this.focused;\n    };\n\n    _this.getBeforeMaskedValueChangeConfig = function () {\n      var _this$maskOptions = _this.maskOptions,\n          mask = _this$maskOptions.mask,\n          maskChar = _this$maskOptions.maskChar,\n          permanents = _this$maskOptions.permanents,\n          formatChars = _this$maskOptions.formatChars;\n      var alwaysShowMask = _this.props.alwaysShowMask;\n      return {\n        mask: mask,\n        maskChar: maskChar,\n        permanents: permanents,\n        alwaysShowMask: !!alwaysShowMask,\n        formatChars: formatChars\n      };\n    };\n\n    _this.isInputAutofilled = function (value, selection, previousValue, previousSelection) {\n      var input = _this.getInputDOMNode(); // only check for positive match because it will be false negative\n      // in case of autofill simulation in tests\n      //\n      // input.matches throws an exception if selector isn't supported\n\n\n      try {\n        if (input.matches(':-webkit-autofill')) {\n          return true;\n        }\n      } catch (e) {} // if input isn't focused then change event must have been triggered\n      // either by autofill or event simulation in tests\n\n\n      if (!_this.focused) {\n        return true;\n      } // if cursor has moved to the end while previousSelection forbids it\n      // then it must be autofill\n\n\n      return previousSelection.end < previousValue.length && selection.end === value.length;\n    };\n\n    _this.onChange = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          beforePasteState = _assertThisInitialize.beforePasteState;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          previousSelection = _assertThisInitialize2.previousSelection;\n\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n\n      var value = _this.getInputValue();\n\n      var previousValue = _this.value;\n\n      var selection = _this.getSelection(); // autofill replaces entire value, ignore old one\n      // https://github.com/sanniassin/react-input-mask/issues/113\n\n\n      if (_this.isInputAutofilled(value, selection, previousValue, previousSelection)) {\n        previousValue = formatValue(_this.maskOptions, '');\n        previousSelection = {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      } // set value and selection as if we haven't\n      // cleared input in onPaste handler\n\n\n      if (beforePasteState) {\n        previousSelection = beforePasteState.selection;\n        previousValue = beforePasteState.value;\n        selection = {\n          start: previousSelection.start + value.length,\n          end: previousSelection.start + value.length,\n          length: 0\n        };\n        value = previousValue.slice(0, previousSelection.start) + value + previousValue.slice(previousSelection.end);\n        _this.beforePasteState = null;\n      }\n\n      var changedState = processChange(_this.maskOptions, value, selection, previousValue, previousSelection);\n      var enteredString = changedState.enteredString;\n      var newSelection = changedState.selection;\n      var newValue = changedState.value;\n\n      if (isFunction(beforeMaskedValueChange)) {\n        var modifiedValue = beforeMaskedValueChange({\n          value: newValue,\n          selection: newSelection\n        }, {\n          value: previousValue,\n          selection: previousSelection\n        }, enteredString, _this.getBeforeMaskedValueChangeConfig());\n        newValue = modifiedValue.value;\n        newSelection = modifiedValue.selection;\n      }\n\n      _this.setInputValue(newValue);\n\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event);\n      }\n\n      if (_this.isWindowsPhoneBrowser) {\n        _this.setSelection(newSelection.start, newSelection.end, {\n          deferred: true\n        });\n      } else {\n        _this.setSelection(newSelection.start, newSelection.end);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var _this$maskOptions2 = _this.maskOptions,\n          mask = _this$maskOptions2.mask,\n          prefix = _this$maskOptions2.prefix;\n      _this.focused = true; // if autoFocus is set, onFocus triggers before componentDidMount\n\n      _this.mounted = true;\n\n      if (mask) {\n        if (!_this.value) {\n          var emptyValue = formatValue(_this.maskOptions, prefix);\n          var newValue = formatValue(_this.maskOptions, emptyValue);\n          var filledLength = getFilledLength(_this.maskOptions, newValue);\n          var cursorPosition = getRightEditablePosition(_this.maskOptions, filledLength);\n          var newSelection = {\n            start: cursorPosition,\n            end: cursorPosition\n          };\n\n          if (isFunction(beforeMaskedValueChange)) {\n            var modifiedValue = beforeMaskedValueChange({\n              value: newValue,\n              selection: newSelection\n            }, {\n              value: _this.value,\n              selection: null\n            }, null, _this.getBeforeMaskedValueChangeConfig());\n            newValue = modifiedValue.value;\n            newSelection = modifiedValue.selection;\n          }\n\n          var isInputValueChanged = newValue !== _this.getInputValue();\n\n          if (isInputValueChanged) {\n            _this.setInputValue(newValue);\n          }\n\n          if (isInputValueChanged && isFunction(_this.props.onChange)) {\n            _this.props.onChange(event);\n          }\n\n          _this.setSelection(newSelection.start, newSelection.end);\n        } else if (getFilledLength(_this.maskOptions, _this.value) < _this.maskOptions.mask.length) {\n          _this.setCursorToEnd();\n        }\n\n        _this.runSaveSelectionLoop();\n      }\n\n      if (isFunction(_this.props.onFocus)) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.onBlur = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var mask = _this.maskOptions.mask;\n\n      _this.stopSaveSelectionLoop();\n\n      _this.focused = false;\n\n      if (mask && !_this.props.alwaysShowMask && isEmpty(_this.maskOptions, _this.value)) {\n        var newValue = '';\n\n        if (isFunction(beforeMaskedValueChange)) {\n          var modifiedValue = beforeMaskedValueChange({\n            value: newValue,\n            selection: null\n          }, {\n            value: _this.value,\n            selection: _this.previousSelection\n          }, null, _this.getBeforeMaskedValueChangeConfig());\n          newValue = modifiedValue.value;\n        }\n\n        var isInputValueChanged = newValue !== _this.getInputValue();\n\n        if (isInputValueChanged) {\n          _this.setInputValue(newValue);\n        }\n\n        if (isInputValueChanged && isFunction(_this.props.onChange)) {\n          _this.props.onChange(event);\n        }\n      }\n\n      if (isFunction(_this.props.onBlur)) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.onMouseDown = function (event) {\n      // tiny unintentional mouse movements can break cursor\n      // position on focus, so we have to restore it in that case\n      //\n      // https://github.com/sanniassin/react-input-mask/issues/108\n      if (!_this.focused && document.addEventListener) {\n        _this.mouseDownX = event.clientX;\n        _this.mouseDownY = event.clientY;\n        _this.mouseDownTime = new Date().getTime();\n\n        var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n          document.removeEventListener('mouseup', mouseUpHandler);\n\n          if (!_this.focused) {\n            return;\n          }\n\n          var deltaX = Math.abs(mouseUpEvent.clientX - _this.mouseDownX);\n          var deltaY = Math.abs(mouseUpEvent.clientY - _this.mouseDownY);\n          var axisDelta = Math.max(deltaX, deltaY);\n\n          var timeDelta = new Date().getTime() - _this.mouseDownTime;\n\n          if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n            _this.setCursorToEnd();\n          }\n        };\n\n        document.addEventListener('mouseup', mouseUpHandler);\n      }\n\n      if (isFunction(_this.props.onMouseDown)) {\n        _this.props.onMouseDown(event);\n      }\n    };\n\n    _this.onPaste = function (event) {\n      if (isFunction(_this.props.onPaste)) {\n        _this.props.onPaste(event);\n      } // event.clipboardData might not work in Android browser\n      // cleaning input to get raw text inside onChange handler\n\n\n      if (!event.defaultPrevented) {\n        _this.beforePasteState = {\n          value: _this.getInputValue(),\n          selection: _this.getSelection()\n        };\n\n        _this.setInputValue('');\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      if (_this.props.children == null && isFunction(_this.props.inputRef)) {\n        _this.props.inputRef(ref);\n      }\n    };\n\n    var _mask = props.mask,\n        _maskChar = props.maskChar,\n        _formatChars = props.formatChars,\n        _alwaysShowMask = props.alwaysShowMask,\n        _beforeMaskedValueChange = props.beforeMaskedValueChange;\n    var defaultValue = props.defaultValue,\n        _value = props.value;\n    _this.maskOptions = parseMask(_mask, _maskChar, _formatChars);\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    if (_value == null) {\n      _value = defaultValue;\n    }\n\n    var _newValue = getStringValue(_value);\n\n    if (_this.maskOptions.mask && (_alwaysShowMask || _newValue)) {\n      _newValue = formatValue(_this.maskOptions, _newValue);\n\n      if (isFunction(_beforeMaskedValueChange)) {\n        var oldValue = props.value;\n\n        if (props.value == null) {\n          oldValue = defaultValue;\n        }\n\n        oldValue = getStringValue(oldValue);\n\n        var modifiedValue = _beforeMaskedValueChange({\n          value: _newValue,\n          selection: null\n        }, {\n          value: oldValue,\n          selection: null\n        }, null, _this.getBeforeMaskedValueChangeConfig());\n\n        _newValue = modifiedValue.value;\n      }\n    }\n\n    _this.value = _newValue;\n    return _this;\n  }\n\n  var _proto = InputElement.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!this.getInputDOMNode()) {\n      return;\n    }\n\n    this.isWindowsPhoneBrowser = isWindowsPhoneBrowser();\n\n    if (this.maskOptions.mask && this.getInputValue() !== this.value) {\n      this.setInputValue(this.value);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var previousSelection = this.previousSelection;\n    var _this$props = this.props,\n        beforeMaskedValueChange = _this$props.beforeMaskedValueChange,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        mask = _this$props.mask,\n        maskChar = _this$props.maskChar,\n        formatChars = _this$props.formatChars;\n    var previousMaskOptions = this.maskOptions;\n    var showEmpty = alwaysShowMask || this.isFocused();\n    var hasValue = this.props.value != null;\n    var newValue = hasValue ? getStringValue(this.props.value) : this.value;\n    var cursorPosition = previousSelection ? previousSelection.start : null;\n    this.maskOptions = parseMask(mask, maskChar, formatChars);\n\n    if (!this.maskOptions.mask) {\n      if (previousMaskOptions.mask) {\n        this.stopSaveSelectionLoop(); // render depends on this.maskOptions and this.value,\n        // call forceUpdate to keep it in sync\n\n        this.forceUpdate();\n      }\n\n      return;\n    } else if (!previousMaskOptions.mask && this.isFocused()) {\n      this.runSaveSelectionLoop();\n    }\n\n    var isMaskChanged = this.maskOptions.mask && this.maskOptions.mask !== previousMaskOptions.mask;\n\n    if (!previousMaskOptions.mask && !hasValue) {\n      newValue = this.getInputValue();\n    }\n\n    if (isMaskChanged || this.maskOptions.mask && (newValue || showEmpty)) {\n      newValue = formatValue(this.maskOptions, newValue);\n    }\n\n    if (isMaskChanged) {\n      var filledLength = getFilledLength(this.maskOptions, newValue);\n\n      if (cursorPosition === null || filledLength < cursorPosition) {\n        if (isFilled(this.maskOptions, newValue)) {\n          cursorPosition = filledLength;\n        } else {\n          cursorPosition = getRightEditablePosition(this.maskOptions, filledLength);\n        }\n      }\n    }\n\n    if (this.maskOptions.mask && isEmpty(this.maskOptions, newValue) && !showEmpty && (!hasValue || !this.props.value)) {\n      newValue = '';\n    }\n\n    var newSelection = {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n\n    if (isFunction(beforeMaskedValueChange)) {\n      var modifiedValue = beforeMaskedValueChange({\n        value: newValue,\n        selection: newSelection\n      }, {\n        value: this.value,\n        selection: this.previousSelection\n      }, null, this.getBeforeMaskedValueChangeConfig());\n      newValue = modifiedValue.value;\n      newSelection = modifiedValue.selection;\n    }\n\n    this.value = newValue;\n    var isValueChanged = this.getInputValue() !== this.value; // render depends on this.maskOptions and this.value,\n    // call forceUpdate to keep it in sync\n\n    if (isValueChanged) {\n      this.setInputValue(this.value);\n      this.forceUpdate();\n    } else if (isMaskChanged) {\n      this.forceUpdate();\n    }\n\n    var isSelectionChanged = false;\n\n    if (newSelection.start != null && newSelection.end != null) {\n      isSelectionChanged = !previousSelection || previousSelection.start !== newSelection.start || previousSelection.end !== newSelection.end;\n    }\n\n    if (isSelectionChanged || isValueChanged) {\n      this.setSelection(newSelection.start, newSelection.end);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n\n    if (this.selectionDeferId !== null) {\n      cancelDefer(this.selectionDeferId);\n    }\n\n    this.stopSaveSelectionLoop();\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        mask = _this$props2.mask,\n        alwaysShowMask = _this$props2.alwaysShowMask,\n        maskChar = _this$props2.maskChar,\n        formatChars = _this$props2.formatChars,\n        inputRef = _this$props2.inputRef,\n        beforeMaskedValueChange = _this$props2.beforeMaskedValueChange,\n        children = _this$props2.children,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\", \"inputRef\", \"beforeMaskedValueChange\", \"children\"]);\n\n    var inputElement;\n    process.env.NODE_ENV !== \"production\" ? warning( // parse mask to test against actual mask prop as this.maskOptions\n    // will be updated later in componentDidUpdate\n    !restProps.maxLength || !parseMask(mask, maskChar, formatChars).mask, 'react-input-mask: maxLength property shouldn\\'t be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.') : void 0;\n\n    if (children) {\n      !isFunction(children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'react-input-mask: children must be a function') : invariant(false) : void 0;\n      var controlledProps = ['onChange', 'onPaste', 'onMouseDown', 'onFocus', 'onBlur', 'value', 'disabled', 'readOnly'];\n\n      var childrenProps = _extends({}, restProps);\n\n      controlledProps.forEach(function (propId) {\n        return delete childrenProps[propId];\n      });\n      inputElement = children(childrenProps);\n      var conflictProps = controlledProps.filter(function (propId) {\n        return inputElement.props[propId] != null && inputElement.props[propId] !== restProps[propId];\n      });\n      !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the react-input-mask's component and should not be altered in children's function: \" + conflictProps.join(', ')) : invariant(false) : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!inputRef, 'react-input-mask: inputRef is ignored when children is passed, attach ref to the children instead') : void 0;\n    } else {\n      inputElement = React.createElement(\"input\", _extends({\n        ref: this.handleRef\n      }, restProps));\n    }\n\n    var changedProps = {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    };\n\n    if (this.maskOptions.mask) {\n      if (!restProps.disabled && !restProps.readOnly) {\n        changedProps.onChange = this.onChange;\n        changedProps.onPaste = this.onPaste;\n        changedProps.onMouseDown = this.onMouseDown;\n      }\n\n      if (restProps.value != null) {\n        changedProps.value = this.value;\n      }\n    }\n\n    inputElement = React.cloneElement(inputElement, changedProps);\n    return inputElement;\n  };\n\n  return InputElement;\n}(React.Component);\n\nmodule.exports = InputElement;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}