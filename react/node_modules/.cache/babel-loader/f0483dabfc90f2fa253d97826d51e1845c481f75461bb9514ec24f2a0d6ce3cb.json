{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { useCookies } from 'react-cookie';\nexport function Login() {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [cookies, setCookie] = useCookies();\n  const handleCookies = cookie_list => {\n    cookie_list.forEach(cookie => {\n      setCookie(cookie.cookie_name, cookie.cookie_value, {\n        path: cookie.cookie_path\n      });\n    });\n  };\n  const onSubmit = async () => {\n    setError(\"\");\n    if (formik.values.username == \"admin\" && formik.values.password == \"admin\") {\n      handleCookies([{\n        cookie_name: \"access_token\",\n        cookie_value: \"asdasdasdasdasdasd\",\n        cookie_path: \"/\"\n      }, {\n        cookie_name: \"session_id\",\n        cookie_value: \"12312312312313\",\n        cookie_path: \"/\"\n      }]);\n    } else {\n      setError(\"Wrong Username or Password\");\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit\n  });\n}\n_s(Login, \"B8EkYAx+UqHIc8FeRruQ3Ul63r0=\", false, function () {\n  return [useCookies, useFormik];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useFormik","useState","useCookies","Login","_s","error","setError","cookies","setCookie","handleCookies","cookie_list","forEach","cookie","cookie_name","cookie_value","path","cookie_path","onSubmit","formik","values","username","password","initialValues","_c","$RefreshReg$"],"sources":["/home/albi/Documents/ReactProject/pet-shop/src/components/login/login.js"],"sourcesContent":["import { useFormik } from \"formik\";\nimport { useState } from \"react\"\nimport { useCookies } from 'react-cookie';\n\n\n\nexport function Login() {\n\n    const [error, setError] = useState(\"\");\n    const [cookies, setCookie] = useCookies();\n\n    const handleCookies = (cookie_list) => {\n\n        cookie_list.forEach(cookie => {\n            setCookie(cookie.cookie_name, cookie.cookie_value, {\n                path: cookie.cookie_path\n            });\n        })\n    };\n\n    const onSubmit = async () => {\n        setError(\"\");\n        if (formik.values.username == \"admin\" && formik.values.password == \"admin\") {\n            handleCookies([{\n                    cookie_name: \"access_token\",\n                    cookie_value: \"asdasdasdasdasdasd\",\n                    cookie_path: \"/\"\n                },\n                {\n                    cookie_name: \"session_id\",\n                    cookie_value: \"12312312312313\",\n                    cookie_path: \"/\"\n                }\n            ])\n        } else {\n            setError(\"Wrong Username or Password\")\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            username: \"\",\n            password: \"\",\n        },\n        onSubmit,\n    });\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,QAAQ;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,cAAc;AAIzC,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,SAAS,CAAC,GAAGN,UAAU,EAAE;EAEzC,MAAMO,aAAa,GAAIC,WAAW,IAAK;IAEnCA,WAAW,CAACC,OAAO,CAACC,MAAM,IAAI;MAC1BJ,SAAS,CAACI,MAAM,CAACC,WAAW,EAAED,MAAM,CAACE,YAAY,EAAE;QAC/CC,IAAI,EAAEH,MAAM,CAACI;MACjB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzBX,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAIY,MAAM,CAACC,MAAM,CAACC,QAAQ,IAAI,OAAO,IAAIF,MAAM,CAACC,MAAM,CAACE,QAAQ,IAAI,OAAO,EAAE;MACxEZ,aAAa,CAAC,CAAC;QACPI,WAAW,EAAE,cAAc;QAC3BC,YAAY,EAAE,oBAAoB;QAClCE,WAAW,EAAE;MACjB,CAAC,EACD;QACIH,WAAW,EAAE,YAAY;QACzBC,YAAY,EAAE,gBAAgB;QAC9BE,WAAW,EAAE;MACjB,CAAC,CACJ,CAAC;IACN,CAAC,MAAM;MACHV,QAAQ,CAAC,4BAA4B,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMY,MAAM,GAAGlB,SAAS,CAAC;IACrBsB,aAAa,EAAE;MACXF,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd,CAAC;IACDJ;EACJ,CAAC,CAAC;AAEN;AAACb,EAAA,CAzCeD,KAAK;EAAA,QAGYD,UAAU,EA8BxBF,SAAS;AAAA;AAAAuB,EAAA,GAjCZpB,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}