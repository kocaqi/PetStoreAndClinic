function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
import { styled } from '../styles';
import { IMAGE_LAYOUT, BACKGROUND_COLOR_TYPE } from './constants';
export var StyledRoot = styled('button', function (_ref) {
  var $theme = _ref.$theme,
      $backgroundColor = _ref.$backgroundColor,
      $backgroundColorType = _ref.$backgroundColorType,
      _ref$$imageLayout = _ref.$imageLayout,
      $imageLayout = _ref$$imageLayout === void 0 ? IMAGE_LAYOUT.top : _ref$$imageLayout;
  var lightBackgroundStyle = {
    color: $theme.colors.contentOnColorInverse,
    borderStyle: 'solid',
    borderWidth: $theme.sizing.scale0,
    borderColor: $theme.colors.borderOpaque
  };
  var darkBackgroundStyle = {
    color: $theme.colors.contentOnColor,
    border: 'none'
  };
  return _objectSpread(_objectSpread({
    alignItems: 'stretch',
    backgroundColor: $backgroundColor,
    borderRadius: $theme.borders.radius400,
    cursor: 'pointer',
    display: 'flex',
    flexDirection: $imageLayout === IMAGE_LAYOUT.top ? 'column' : 'row',
    overflow: 'hidden',
    padding: '0',
    position: 'relative',
    textAlign: 'start',
    width: '100%',
    boxShadow: "inset 999px 999px 0px ".concat($theme.colors.backgroundOverlayArt)
  }, $backgroundColorType === BACKGROUND_COLOR_TYPE.light ? lightBackgroundStyle : darkBackgroundStyle), {}, {
    ':focus': {
      outlineWidth: '3px',
      outlineStyle: 'solid',
      outlineColor: $theme.colors.borderAccent,
      outlineOffset: '-3px'
    },
    ':hover:after': {
      content: '""',
      width: '100%',
      height: '100%',
      zIndex: '1',
      position: 'absolute',
      top: '0',
      left: '0',
      backgroundColor: $backgroundColorType === BACKGROUND_COLOR_TYPE.light ? 'rgba(0, 0, 0, 0.04)' : 'rgba(255, 255, 255, 0.10)'
    },
    ':active:after': {
      content: '""',
      width: '100%',
      height: '100%',
      zIndex: '1',
      position: 'absolute',
      top: '0',
      left: '0',
      backgroundColor: $backgroundColorType === BACKGROUND_COLOR_TYPE.light ? 'rgba(0, 0, 0, 0.08)' : 'rgba(255, 255, 255, 0.20)'
    }
  });
});
StyledRoot.displayName = "StyledRoot";
export var StyledImage = styled('div', function (_ref2) {
  var _ref2$$imageLayout = _ref2.$imageLayout,
      $imageLayout = _ref2$$imageLayout === void 0 ? IMAGE_LAYOUT.top : _ref2$$imageLayout,
      _ref2$$backgroundPosi = _ref2.$backgroundPosition,
      $backgroundPosition = _ref2$$backgroundPosi === void 0 ? 'center' : _ref2$$backgroundPosi,
      $src = _ref2.$src;
  return _objectSpread({
    backgroundImage: "url(".concat($src, ")"),
    backgroundSize: 'cover',
    backgroundPosition: $backgroundPosition
  }, $imageLayout === IMAGE_LAYOUT.top ? {
    height: '132px',
    width: '100%'
  } : {
    width: '112px',
    order: '1'
  });
});
StyledImage.displayName = "StyledImage";
export var StyledContentContainer = styled('div', function (_ref3) {
  var $theme = _ref3.$theme;
  return {
    width: '100%',
    boxSizing: 'border-box',
    paddingTop: $theme.sizing.scale600,
    paddingRight: $theme.sizing.scale300,
    paddingBottom: $theme.sizing.scale600,
    paddingLeft: $theme.sizing.scale600
  };
});
StyledContentContainer.displayName = "StyledContentContainer";
export var StyledHeadingContainer = styled('div', function (_ref4) {
  var $theme = _ref4.$theme;
  return _objectSpread({}, $theme.typography.HeadingXSmall);
});
StyledHeadingContainer.displayName = "StyledHeadingContainer";
export var StyledParagraphContainer = styled('div', function (_ref5) {
  var $theme = _ref5.$theme;
  return _objectSpread(_objectSpread({}, $theme.typography.ParagraphSmall), {}, {
    marginTop: $theme.sizing.scale100
  });
});
StyledParagraphContainer.displayName = "StyledParagraphContainer";