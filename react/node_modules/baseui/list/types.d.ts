import type * as React from 'react';
import type { Override } from '../helpers/overrides';
import type { IconProps } from '../icon';
import type { ARTWORK_SIZES, SHAPE } from './constants';
export declare type ArtworkSizes = typeof ARTWORK_SIZES.SMALL | typeof ARTWORK_SIZES.MEDIUM | typeof ARTWORK_SIZES.LARGE;
export declare type Shape = typeof SHAPE.DEFAULT | typeof SHAPE.ROUND;
export declare type StyledRootProps = {
    $shape: Shape;
};
export declare type StyledArtworkContainerProps = {
    $artworkSize: ArtworkSizes | number;
    $sublist?: boolean;
};
export declare type StyledContentProps = {
    $mLeft: boolean;
    $sublist: boolean;
};
export declare type ListOverrides = {
    Root?: Override;
    ArtworkContainer?: Override;
    Content?: Override;
    EndEnhancerContainer?: Override;
};
export declare type ListProps = {
    artwork?: React.ComponentType<{
        size: IconProps['size'];
    } & IconProps>;
    artworkSize?: ArtworkSizes | number;
    shape?: Shape;
    children: React.ReactNode;
    endEnhancer?: React.ComponentType<{}>;
    'aria-label'?: string;
    'aria-selected'?: boolean;
    id?: String;
    overrides?: ListOverrides;
    role?: string;
    sublist?: boolean;
};
export declare type LabelOverrides = {
    LabelContent?: Override;
    LabelDescription?: Override;
    LabelSublistContent?: Override;
};
export declare type LabelProps = {
    children: React.ReactNode;
    description?: React.ReactNode;
    sublist?: boolean;
    overrides?: LabelOverrides;
};
export declare type HeadingOverrides = {
    Root?: Override;
    Content?: Override;
    HeadingContainer?: Override;
    SubHeadingContainer?: Override;
    EndEnhancerContainer?: Override;
    EndEnhancerDescriptionContainer?: Override;
};
export declare type HeadingProps = {
    heading: React.ReactNode | React.ComponentType<{}>;
    subHeading?: React.ReactNode | React.ComponentType<{}>;
    endEnhancer?: React.ReactNode | React.ComponentType<{}>;
    endEnhancerDescription?: React.ReactNode | React.ComponentType<{}>;
    overrides?: HeadingOverrides;
    maxLines?: 1 | 2;
};
export declare type StyledHeadingHeadingProps = {
    $maxLines: number;
};
export declare type MenuAdapterProps = {
    item?: any;
    onMouseEnter?: (a: MouseEvent) => unknown;
    onClick?: (a: MouseEvent) => unknown;
    $size?: string;
    $isHighlighted?: boolean;
    $disabled?: boolean;
} & ListProps;
