/// <reference types="react" />
import type { Size, Divider } from './types';
declare type StyledRootProps = {
    $divider?: Divider;
};
export declare const StyledRoot: import("styletron-react").StyletronComponent<"div", StyledRootProps>;
declare type StyledTableProps = {
    $width?: string | null;
};
export declare const StyledTable: import("styletron-react").StyletronComponent<"table", StyledTableProps>;
export declare const StyledTableHead: import("styletron-react").StyletronComponent<"thead", {}>;
export declare const StyledTableHeadRow: import("styletron-react").StyletronComponent<"tr", {}>;
declare type StyledTableHeadCellProps = {
    $col?: {};
    $colIndex?: number | null;
    $divider?: Divider;
    $isNumeric?: boolean | null;
    $size?: Size;
};
export declare const StyledTableHeadCell: import("styletron-react").StyletronComponent<"th", StyledTableHeadCellProps>;
export declare const StyledTableHeadCellSortable: import("styletron-react").StyletronComponent<"th", {
    $isFocusVisible: boolean;
} & StyledTableHeadCellProps>;
export declare const StyledSortIconContainer: import("styletron-react").StyletronComponent<"span", {}>;
export declare const StyledSortAscIcon: import("styletron-react").StyletronComponent<import("react").ForwardRefExoticComponent<import("react").SVGAttributes<SVGElement> & {
    children?: import("react").ReactNode;
    size?: import("../icon").Size;
    color?: string;
    title?: string;
    overrides?: import("../icon").IconOverrides;
} & import("../icon").StyledComponentArgs & import("react").RefAttributes<SVGSVGElement>>, {}>;
export declare const StyledSortDescIcon: import("styletron-react").StyletronComponent<import("react").ForwardRefExoticComponent<import("react").SVGAttributes<SVGElement> & {
    children?: import("react").ReactNode;
    size?: import("../icon").Size;
    color?: string;
    title?: string;
    overrides?: import("../icon").IconOverrides;
} & import("../icon").StyledComponentArgs & import("react").RefAttributes<SVGSVGElement>>, {}>;
export declare const StyledSortNoneIcon: import("styletron-react").StyletronComponent<import("react").ForwardRefExoticComponent<import("react").SVGAttributes<SVGElement> & {
    children?: import("react").ReactNode;
    size?: import("../icon").Size;
    color?: string;
    title?: string;
    overrides?: import("../icon").IconOverrides;
} & import("../icon").StyledComponentArgs & import("react").RefAttributes<SVGSVGElement>>, {}>;
export declare const StyledTableBody: import("styletron-react").StyletronComponent<"tbody", {}>;
declare type StyledTableBodyRowProps = {
    $col?: {};
    $colIndex?: number | null;
    $divider?: Divider;
};
export declare const StyledTableBodyRow: import("styletron-react").StyletronComponent<"tr", StyledTableBodyRowProps>;
declare type StyledTableBodyCellProps = {
    $col?: {};
    $colIndex?: number | null;
    $divider?: Divider;
    $row?: {};
    $rowIndex?: number | null;
    $size?: Size;
    $isNumeric?: boolean | null;
    $isLastRow?: boolean | null;
    $isSortable?: boolean | null;
};
export declare const StyledTableBodyCell: import("styletron-react").StyletronComponent<"td", StyledTableBodyCellProps>;
export declare const StyledTableLoadingMessage: import("styletron-react").StyletronComponent<"div", {}>;
export declare const StyledTableEmptyMessage: import("styletron-react").StyletronComponent<"div", {}>;
export {};
