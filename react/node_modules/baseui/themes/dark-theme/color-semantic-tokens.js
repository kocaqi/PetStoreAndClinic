"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colorTokens = _interopRequireDefault(require("./color-tokens"));

var _util = require("../../styles/util");

var _colors = _interopRequireDefault(require("../../tokens/colors"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = function _default() {
  var foundation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _colorTokens.default;
  var core = {
    // Background
    backgroundPrimary: foundation.primaryB,
    backgroundSecondary: _colors.default.gray800,
    backgroundTertiary: _colors.default.gray700,
    backgroundInversePrimary: foundation.primaryA,
    backgroundInverseSecondary: _colors.default.gray300,
    // Content
    contentPrimary: _colors.default.white,
    contentSecondary: _colors.default.gray300,
    contentTertiary: _colors.default.gray400,
    contentInversePrimary: _colors.default.black,
    contentInverseSecondary: _colors.default.gray700,
    contentInverseTertiary: _colors.default.gray600,
    // Border
    borderOpaque: _colors.default.gray700,
    borderTransparent: (0, _util.hexToRgb)(foundation.primaryA, '0.08'),
    borderSelected: foundation.primaryA,
    borderInverseOpaque: _colors.default.gray400,
    borderInverseTransparent: (0, _util.hexToRgb)(foundation.primaryB, '0.2'),
    borderInverseSelected: foundation.primaryB
  };
  var coreExtensions = {
    // Backgrounds
    backgroundStateDisabled: _colors.default.gray800,
    backgroundOverlayDark: (0, _util.hexToRgb)(_colors.default.black, '0.3'),
    backgroundOverlayLight: (0, _util.hexToRgb)(_colors.default.black, '0.08'),
    backgroundOverlayArt: (0, _util.hexToRgb)(_colors.default.black, '0.16'),
    backgroundAccent: foundation.accent,
    backgroundNegative: foundation.negative,
    backgroundWarning: foundation.warning,
    backgroundPositive: _colors.default.green500,
    backgroundLightAccent: _colors.default.blue700,
    backgroundLightPositive: _colors.default.green700,
    backgroundLightNegative: _colors.default.red700,
    backgroundLightWarning: _colors.default.yellow700,
    backgroundAlwaysDark: _colors.default.gray900,
    backgroundAlwaysLight: _colors.default.gray100,
    // Content
    contentStateDisabled: _colors.default.gray600,
    contentAccent: _colors.default.blue300,
    contentOnColor: _colors.default.white,
    contentOnColorInverse: _colors.default.black,
    contentNegative: _colors.default.red300,
    contentWarning: _colors.default.yellow300,
    contentPositive: _colors.default.green300,
    // Border
    borderStateDisabled: _colors.default.gray800,
    borderAccent: _colors.default.blue400,
    borderAccentLight: _colors.default.blue500,
    borderNegative: _colors.default.red500,
    borderWarning: _colors.default.yellow500,
    borderPositive: _colors.default.green500,
    // Programs
    safety: _colors.default.blue400,
    eatsGreen400: _colors.default.green400,
    freightBlue400: _colors.default.cobalt400,
    jumpRed400: _colors.default.red400,
    rewardsTier1: _colors.default.blue400,
    rewardsTier2: _colors.default.yellow400,
    rewardsTier3: _colors.default.platinum400,
    rewardsTier4: _colors.default.gray200,
    membership: _colors.default.yellow600
  };
  return _objectSpread(_objectSpread({}, core), coreExtensions);
};

exports.default = _default;