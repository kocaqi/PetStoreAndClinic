"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.driver = driver;
exports.getInitialStyle = getInitialStyle;
exports.renderDeclarativeRules = renderDeclarativeRules;

function driver(style, styletron) {
  const tx = renderDeclarativeRules(style, styletron);
  return styletron.renderStyle(tx);
}

function getInitialStyle() {
  return {};
}

function renderDeclarativeRules(style, styletron) {
  for (const key in style) {
    const val = style[key];

    if (key === "animationName" && typeof val !== "string") {
      style.animationName = styletron.renderKeyframes(val);
      continue;
    }

    if (key === "fontFamily" && typeof val !== "string") {
      if (Array.isArray(val)) {
        let result = "";

        for (const font of val) {
          if (typeof font === "object") {
            result += `${styletron.renderFontFace(font)},`;
          } else if (typeof font === "string") {
            result += `${font},`;
          }
        }

        style.fontFamily = result.slice(0, -1);
        continue;
      } else if (val === void 0) {
        continue;
      } else {
        style.fontFamily = styletron.renderFontFace(val);
        continue;
      }
    }

    if (typeof val === "object" && val !== null) {
      renderDeclarativeRules(val, styletron);
    }
  }

  return style;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkcml2ZXIiLCJzdHlsZSIsInN0eWxldHJvbiIsInR4IiwicmVuZGVyRGVjbGFyYXRpdmVSdWxlcyIsInJlbmRlclN0eWxlIiwiZ2V0SW5pdGlhbFN0eWxlIiwia2V5IiwidmFsIiwiYW5pbWF0aW9uTmFtZSIsInJlbmRlcktleWZyYW1lcyIsIkFycmF5IiwiaXNBcnJheSIsInJlc3VsdCIsImZvbnQiLCJyZW5kZXJGb250RmFjZSIsImZvbnRGYW1pbHkiLCJzbGljZSJdLCJzb3VyY2VzIjpbInNyYy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7XG4gIFByb3BlcnRpZXMsXG4gIEZvbnRGYWNlIGFzIEZvbnRGYWNlT2JqZWN0LFxuICBLZXlmcmFtZXNPYmplY3QsXG59IGZyb20gXCIuL3N0eWxlLXR5cGVzXCI7XG5cbmV4cG9ydCB0eXBlIHtGb250RmFjZU9iamVjdCwgS2V5ZnJhbWVzT2JqZWN0fTtcblxuZXhwb3J0IHR5cGUgU3R5bGVPYmplY3QgPSBQcm9wZXJ0aWVzICYge1xuICBba2V5IGluIHN0cmluZ106IFByb3BlcnRpZXNba2V5b2YgUHJvcGVydGllc10gfCBTdHlsZU9iamVjdDtcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhbmRhcmRFbmdpbmUge1xuICByZW5kZXJTdHlsZShzdHlsZTogU3R5bGVPYmplY3QpOiBzdHJpbmc7XG4gIHJlbmRlcktleWZyYW1lcyhrZXlmcmFtZXM6IEtleWZyYW1lc09iamVjdCk6IHN0cmluZztcbiAgcmVuZGVyRm9udEZhY2UoZm9udEZhY2U6IEZvbnRGYWNlT2JqZWN0KTogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZHJpdmVyKHN0eWxlOiBTdHlsZU9iamVjdCwgc3R5bGV0cm9uOiBTdGFuZGFyZEVuZ2luZSk6IHN0cmluZyB7XG4gIGNvbnN0IHR4ID0gcmVuZGVyRGVjbGFyYXRpdmVSdWxlcyhzdHlsZSwgc3R5bGV0cm9uKTtcbiAgcmV0dXJuIHN0eWxldHJvbi5yZW5kZXJTdHlsZSh0eCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbml0aWFsU3R5bGUoKTogU3R5bGVPYmplY3Qge1xuICByZXR1cm4ge307XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJEZWNsYXJhdGl2ZVJ1bGVzKFxuICBzdHlsZTogU3R5bGVPYmplY3QsXG4gIHN0eWxldHJvbjogU3RhbmRhcmRFbmdpbmUsXG4pIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gc3R5bGUpIHtcbiAgICBjb25zdCB2YWwgPSBzdHlsZVtrZXldO1xuICAgIGlmIChrZXkgPT09IFwiYW5pbWF0aW9uTmFtZVwiICYmIHR5cGVvZiB2YWwgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHN0eWxlLmFuaW1hdGlvbk5hbWUgPSBzdHlsZXRyb24ucmVuZGVyS2V5ZnJhbWVzKHZhbCBhcyBhbnkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChrZXkgPT09IFwiZm9udEZhbWlseVwiICYmIHR5cGVvZiB2YWwgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IFwiXCI7XG4gICAgICAgIGZvciAoY29uc3QgZm9udCBvZiB2YWwpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGZvbnQgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBgJHtzdHlsZXRyb24ucmVuZGVyRm9udEZhY2UoZm9udCBhcyBhbnkpfSxgO1xuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGZvbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBgJHtmb250fSxgO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdHlsZS5mb250RmFtaWx5ID0gcmVzdWx0LnNsaWNlKDAsIC0xKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9IGVsc2UgaWYgKHZhbCA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3R5bGUuZm9udEZhbWlseSA9IHN0eWxldHJvbi5yZW5kZXJGb250RmFjZSh2YWwgYXMgYW55KTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsID09PSBcIm9iamVjdFwiICYmIHZhbCAhPT0gbnVsbCkge1xuICAgICAgcmVuZGVyRGVjbGFyYXRpdmVSdWxlcyh2YWwgYXMgU3R5bGVPYmplY3QsIHN0eWxldHJvbik7XG4gICAgfVxuICB9XG4gIHJldHVybiBzdHlsZTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBa0JPLFNBQVNBLE1BQVQsQ0FBZ0JDLEtBQWhCLEVBQW9DQyxTQUFwQyxFQUF1RTtFQUM1RSxNQUFNQyxFQUFFLEdBQUdDLHNCQUFzQixDQUFDSCxLQUFELEVBQVFDLFNBQVIsQ0FBakM7RUFDQSxPQUFPQSxTQUFTLENBQUNHLFdBQVYsQ0FBc0JGLEVBQXRCLENBQVA7QUFDRDs7QUFFTSxTQUFTRyxlQUFULEdBQXdDO0VBQzdDLE9BQU8sRUFBUDtBQUNEOztBQUVNLFNBQVNGLHNCQUFULENBQ0xILEtBREssRUFFTEMsU0FGSyxFQUdMO0VBQ0EsS0FBSyxNQUFNSyxHQUFYLElBQWtCTixLQUFsQixFQUF5QjtJQUN2QixNQUFNTyxHQUFHLEdBQUdQLEtBQUssQ0FBQ00sR0FBRCxDQUFqQjs7SUFDQSxJQUFJQSxHQUFHLEtBQUssZUFBUixJQUEyQixPQUFPQyxHQUFQLEtBQWUsUUFBOUMsRUFBd0Q7TUFDdERQLEtBQUssQ0FBQ1EsYUFBTixHQUFzQlAsU0FBUyxDQUFDUSxlQUFWLENBQTBCRixHQUExQixDQUF0QjtNQUNBO0lBQ0Q7O0lBQ0QsSUFBSUQsR0FBRyxLQUFLLFlBQVIsSUFBd0IsT0FBT0MsR0FBUCxLQUFlLFFBQTNDLEVBQXFEO01BQ25ELElBQUlHLEtBQUssQ0FBQ0MsT0FBTixDQUFjSixHQUFkLENBQUosRUFBd0I7UUFDdEIsSUFBSUssTUFBTSxHQUFHLEVBQWI7O1FBQ0EsS0FBSyxNQUFNQyxJQUFYLElBQW1CTixHQUFuQixFQUF3QjtVQUN0QixJQUFJLE9BQU9NLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7WUFDNUJELE1BQU0sSUFBSyxHQUFFWCxTQUFTLENBQUNhLGNBQVYsQ0FBeUJELElBQXpCLENBQXNDLEdBQW5EO1VBQ0QsQ0FGRCxNQUVPLElBQUksT0FBT0EsSUFBUCxLQUFnQixRQUFwQixFQUE4QjtZQUNuQ0QsTUFBTSxJQUFLLEdBQUVDLElBQUssR0FBbEI7VUFDRDtRQUNGOztRQUNEYixLQUFLLENBQUNlLFVBQU4sR0FBbUJILE1BQU0sQ0FBQ0ksS0FBUCxDQUFhLENBQWIsRUFBZ0IsQ0FBQyxDQUFqQixDQUFuQjtRQUNBO01BQ0QsQ0FYRCxNQVdPLElBQUlULEdBQUcsS0FBSyxLQUFLLENBQWpCLEVBQW9CO1FBQ3pCO01BQ0QsQ0FGTSxNQUVBO1FBQ0xQLEtBQUssQ0FBQ2UsVUFBTixHQUFtQmQsU0FBUyxDQUFDYSxjQUFWLENBQXlCUCxHQUF6QixDQUFuQjtRQUNBO01BQ0Q7SUFDRjs7SUFDRCxJQUFJLE9BQU9BLEdBQVAsS0FBZSxRQUFmLElBQTJCQSxHQUFHLEtBQUssSUFBdkMsRUFBNkM7TUFDM0NKLHNCQUFzQixDQUFDSSxHQUFELEVBQXFCTixTQUFyQixDQUF0QjtJQUNEO0VBQ0Y7O0VBQ0QsT0FBT0QsS0FBUDtBQUNEIn0=